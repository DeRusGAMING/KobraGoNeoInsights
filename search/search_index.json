{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hi and welcome to my little page about the 3D FDM printers \"Kobra Go\" and \"Kobra Neo\" from Anycubic. </p> <p>I am a newbie to 3D printing and got a Kobra Neo from a friend of mine. As it came with some problems and needed a bit of tinker love, I was trying to find informations and tips specifically about the Neo - it turned out that it wasn't an easy mission as it's pretty new to the Kobra family. So I thought it might be a good idea to document my tinkering and collect informations and tips about the Go and Neo (as they are basically the same) to facilitate other newbies like me an easier start right away.   </p> Want to contribute? <p>If you'd like to contribute - please let me know, I'd highly appreciate it.  Either if you did any mods and documentated them, have certain tips, stumbled upon useful informations across the web or want to contribute by taking certain pictures from the Go - anything is welcome.  You don't necessarily need a GitHub account for it - just send me an email to   <code>3dneo (at) quantentunnel.de</code>  and we'll figure something out.  Thank you! </p> <p>If you find this page useful, please consider recommending it to others. This will make the community aware of this page and help other users. Thank you! </p> <p>Happy tinkering and printing! </p> Thanks to the Contributers! <ul> <li>Thanks to reddit member I_Sells_Drugs for taking pictures of his sheared off heatbreak!</li> <li>Thanks to Anthony for disassembling the printhead of the Go and taking all the pictures!  </li> </ul> <p>Disclaimer</p> <ul> <li>I'm not responsible in any way if any damage occurs! </li> <li>Please be aware of the fact that you use and/or transpose everything at your own risk! </li> <li>It can't be guaranteed that everything is correct and that it wouldn't harm your printer or even yourself - keep in mind that I'm NO expert by all means! I'm a newbie and might be wrong! </li> <li>All informations, tips, instructions, suggestions, mods and so on which could be found here should be considered as a base for your own further research! </li> <li>Neither am I resposible for any content that I've linked to, it's just meant to be a further source of information to make the start of your own research a bit easier! </li> </ul>"},{"location":"calibration/","title":"Calibration","text":""},{"location":"calibration/#calibration","title":"Calibration","text":"<p>In this chapter I'll talk a bit about the topic of calibration. I probably won't give examples or step-by-step instructions for every calibration that's necessary or advisable to do as there are many sites out there to find which are already covering this topic, so maybe just do a little research by your onw. However, to make this journey a bit easier for you to begin with, I'll list some pages that I personally found useful (links are about to come soon).  </p> Calibration Using OctoPrint <p>If you're using OctoPrint, you might want to check out the plugin \"Marlin Calibration Tools\" which allows you to easily execute different calibration procedures.  </p> Calibration Models for Cura <p>If you're using Cura, you might want to check out the plugin \"Calibration Shapes\" which gives you access to different STL models you can use for calibration. Before slicing and printing, make sure you're reading the specific notes about the models at the wiki page of the creator.  </p>"},{"location":"calibration/#calibration-guides","title":"Calibration Guides","text":"<p>There are many sites and tutorials to find which are about calibration, so you might want to search for that at your preferred site first. However, I found the following guides useful.  </p> <ul> <li>The Print Quality Troubleshooting Guide is a good start to compare your faulty prints and see what may caused the problem.    </li> <li>A handy reference when it comes down to judging the quality of your first layer is the poster about what incorrect bed leveling can cause made my Billie Ruben.</li> <li>Elli's Print Tuning Guide made by @AndrewEllis93</li> <li>All3DP's article \"Extruder Calibration: How to Calibrate E-Steps\"</li> </ul>"},{"location":"calibration/#pid-tuning","title":"PID Tuning","text":"<p>Without going into too much details here, PID stands for Proportion, Integral and Derivate. These are three variables of an algorith which is supposed to keep the temperature stable. By executing a PID tuning, the printer heats up the desired heating element (extruder or bed) to a given temperature for a given amount of circles and measures the fluctuation. After the process is done, you'll then get an output of three values P, I and D and write them to the memory.  </p> <p>It's advisable to execute a PID tuning for both the extruder and the bed before you want to use your printer for the first time. Also after you changed the hotend, the cartridge heater or a thermistor or installed a new bed, you should execute a PID tuning.  </p> <p>The best way to execute a PID tuning is by simply using certain G-code commands and send them to your printer. To do so, I'll show you an example of how to do it using OctoPrint - but you can do it with any other program that allows you to send G-code commands directly also.  </p> <p>PID tuning needs to be done in two steps: one for the extruder and one for the bed.</p>"},{"location":"calibration/#extruder","title":"Extruder","text":"<p>Because I use to print at 220\u00b0C, I want to use this temperature for the PID tuning of the extruder. I want the printer to execute seven cycles - the more the better the result will be.  </p> <p>The belonging G-code is <code>M303 E0 S220 C7</code> where <code>M303</code> is the PID tune, <code>E0</code> is the extruder, <code>S220</code> is the temperature of 220\u00b0C and <code>C7</code> means seven cycles.  </p> <p>After sending this command, the printer will reply and start the process: <pre><code>Send: M303 E0 S220 C7  \nRecv: PID Autotune start\n</code></pre></p> <p>The printer will then display the process and values for each cycle. You don't need that later, but just that you saw that once I'll show you an output of one of those cycles: <pre><code>Recv:  T:219.87 /0.00 (244.63) B:47.71 /0.00 (3646.75) @:101 B@:0\nRecv:  T:218.31 /0.00 (252.13) B:47.62 /0.00 (3648.25) @:101 B@:0\nRecv:  T:216.46 /0.00 (261.00) B:47.55 /0.00 (3649.25) @:101 B@:0\nRecv:  T:215.44 /0.00 (265.88) B:47.43 /0.00 (3651.13) @:101 B@:0\nRecv:  T:214.66 /0.00 (269.63) B:47.34 /0.00 (3652.50) @:101 B@:0\nRecv:  T:214.71 /0.00 (269.38) B:47.21 /0.00 (3654.38) @:101 B@:0\nRecv:  T:215.13 /0.00 (267.38) B:47.07 /0.00 (3656.50) @:101 B@:0\nRecv:  T:216.17 /0.00 (262.38) B:47.06 /0.00 (3656.75) @:101 B@:0\nRecv:  T:217.55 /0.00 (255.75) B:46.99 /0.00 (3657.75) @:101 B@:0\nRecv:  T:219.04 /0.00 (248.63) B:46.91 /0.00 (3659.00) @:101 B@:0\nRecv:  T:220.84 /0.00 (240.63) B:46.86 /0.00 (3659.75) @:0 B@:0\nRecv:  T:223.09 /0.00 (231.63) B:46.72 /0.00 (3661.88) @:0 B@:0\nRecv:  T:224.44 /0.00 (226.25) B:46.62 /0.00 (3663.38) @:0 B@:0\nRecv:  T:225.22 /0.00 (223.13) B:46.50 /0.00 (3665.25) @:0 B@:0\nRecv:  T:225.78 /0.00 (220.88) B:46.44 /0.00 (3666.13) @:0 B@:0\nRecv:  T:225.19 /0.00 (223.25) B:46.28 /0.00 (3666.63) @:0 B@:0\nRecv:  T:224.50 /0.00 (226.00) B:46.24 /0.00 (3669.13) @:0 B@:0\nRecv:  T:223.53 /0.00 (229.88) B:46.16 /0.00 (3670.38) @:0 B@:0\nRecv:  T:222.34 /0.00 (234.63) B:46.08 /0.00 (3671.63) @:0 B@:0\nRecv:  T:220.34 /0.00 (242.63) B:46.00 /0.00 (3672.75) @:0 B@:0\nRecv:  bias: 101 d: 101 min: 214.48 max: 225.78 Ku: 22.76 Tu: 38.85\nRecv:  Classic PID\nRecv:  Kp: 13.65 Ki: 0.70 Kd: 66.31\n</code></pre> As you can see looking at the first value \"T:\" which is the temperature of the extruder, it fluctuates around the desired 220\u00b0C, so the printer heats it up and let it cool down around the 220\u00b0C.  </p> <p>You can see the process by looking at the temperature graph as shown below. </p> <p>After finishing the seven cycles, you'll receive a summarized output like the one below: <pre><code>Recv: PID Autotune finished! Put the last Kp, Ki and Kd constants from below into Configuration.h\nRecv: #define DEFAULT_Kp 20.84\nRecv: #define DEFAULT_Ki 1.86\nRecv: #define DEFAULT_Kd 58.26\nRecv: ok\n</code></pre> You can see the values for P = Kp, I = Ki and D = Kd - these have to be sent to the printer. To do so, we take the values from above and send the following <code>M301</code> command, the printer will answer with a \"received\" message: <pre><code>Send: M301 P20.84 I1.86 D58.26\nRecv: echo: p:20.84 i:1.86 d:58.26\nRecv: ok\n</code></pre> Now we need to save everything by sending the <code>M500</code> command: <pre><code>Send: M500 \nRecv: echo:Settings Stored (735 bytes; crc 9159)\nRecv: ok\n</code></pre> That's it! Congratulations, you just did the PID tuning for your extruder!</p>"},{"location":"calibration/#bed","title":"Bed","text":"<p>Now you want to do the same for your heated bed, but you have to use a different command. Because I use to print at a bed temperature of 60\u00b0C, I want to execute the PID tuning at that temperature also. Again it should be done seven times.  </p> <p>The belonging code is <code>M303 E-1 S60 C7</code> where <code>M303</code> is the PID tune, <code>E-1</code> is the bed, <code>S60</code> is the temperature of 60\u00b0C and <code>C7</code> means seven cycles.  </p> <p>Because you already know the steps now, I'll just write down the commands and answers from the printer: <pre><code>Send: M303 E-1 S60 C7\nRecv: PID Autotune start\n(...)\nRecv: PID Autotune finished! Put the last Kp, Ki and Kd constants from below into Configuration.h\nRecv: #define DEFAULT_bedKp 124.24\nRecv: #define DEFAULT_bedKi 21.69\nRecv: #define DEFAULT_bedKd 474.49\nRecv: ok\n(...)\nSend: M304 P124.24 I21.69 D474.49\nRecv: echo: p:124.24 i:21.69 d:474.49\nRecv: ok\n(...)\nSend: M500\nRecv: echo:Settings Stored (735 bytes; crc 54612)\nRecv: ok\n</code></pre> That's it! Congratulations, you just did the PID tuning for your bed!</p>"},{"location":"further_sources/","title":"Further Sources","text":""},{"location":"further_sources/#further-sources-of-information","title":"Further Sources of Information","text":""},{"location":"further_sources/#anycubic","title":"Anycubic","text":"<p>Here of course the Anycubic website has to be mentioned first. You can find manuals and firmware at their support page. They also produced some video tutorials about e.g. changing the printhead or the mainboard for the Go and the Neo. You can find them at their guide videos page. Pretty much all of these informations are also available at their blog page.  </p>"},{"location":"further_sources/#general-informations","title":"General Informations","text":"<p>There are many great websites and YouTube channels out there and if you're already into this whole 3D printing thing, you probably already have your favourites. So it's hard for me to recommend any. However, if you're new to this whole thing like I am (or if you've never heard of one of the following), I'd recommend taking a look at the following sources to gather informations:  </p> <ul> <li>Website of All3DP</li> <li>Website of Thomas Sanladerer and his YouTube channel </li> <li>(more to come)</li> </ul>"},{"location":"further_sources/#3d-models","title":"3D Models","text":"<p>In the following I'll list some of the pages where you can search and find free 3D models. I only list those pages where you don't need a registration and where you can get free 3D models. Some of the following pages offer direct downloads (DD), others are search engines (SE).   </p> <ul> <li>https://www.thingiverse.com/ (DD)</li> <li>https://www.printables.com/en (DD)</li> <li>https://cults3d.com/en/ (DD)</li> <li>https://repables.com/ (DD)</li> <li>https://www.youmagine.com/ (DD)</li> <li>https://wago-creators.com/ (DD)</li> <li>https://www.stlfinder.com/ (SE)</li> <li>https://www.yeggi.com/ (SE)</li> <li>https://3dmdb.com/ (SE)</li> </ul>"},{"location":"gcode_doc/","title":"G-Code Documentation","text":""},{"location":"gcode_doc/#g-code-documentation","title":"G-Code Documentation","text":"<p>If you're new to this whole 3D printing world, then you might want to start reading the article from All3DP: 3D Printer G-code Commands: Main List &amp; Quick Tutorial to get an overview about what G-code is.  </p> <p>For a complete reference of G-codes, you might want to have a look at the following 'official' sources. Of course there are countless sites to find which cover this topic, but the following ones are definitely the one I'd look up first.    </p>"},{"location":"gcode_doc/#reprap","title":"RepRap","text":"<p>The first one to mention is the RepRap Wiki, where you can find a general explanation about what G-code is, how it works and all the g-commands. Within the G-commands section and the specific commands you'll also see tables which firmware (Marlin/Klipper/RepRap/Repetier/Smoothie) supports the specific command. </p>"},{"location":"gcode_doc/#marlin","title":"Marlin","text":"<p>You can find a complete reference at the belonging Marlin website.  </p>"},{"location":"gcode_doc/#klipper","title":"Klipper","text":"<p>Besides most of the standard G-code Klipper does support (Attention: it doesn't support ALL of the standard commands!), Klipper uses so called \"extended\" G-code commands and scripts for general status and configuration. These extended commands start with a command which may be followed by one or more parameters (e.g. using the command <code>SET_FAN_SPEED FAN=config_name SPEED=&lt;speed&gt;</code> you can set the desired speed of a certain fan). You can find the whole reference at the Klipper documentation page about G-codes.  </p>"},{"location":"printers/","title":"The Printers","text":""},{"location":"printers/#printers","title":"Printers","text":"<p>The Anycubic Kobra Go and Kobra Neo are pretty much identical FDM bed slinger printers, the only real difference seems to be the different type of extruder and the different home position:  </p> <ul> <li>The Kobra Go uses a bowden drive extruder (user manual Kobra Go), the home position is the front right corner of the bed.  </li> <li>The Kobra Neo uses a direct drive extruder (user manual Kobra Neo), the home position is the front left corner of the bed.  </li> </ul> Be Aware of Different Settings <p>Because of the different types of extruder systems and a different home position you have to be aware of certain settings like in the slicer and also in alternative firmware like Klipper. In the slicer (e.g. Cura) you need to keep an eye on the rectration distance, which is set to a higher value at the Go (~6mm) than at the Neo (~1mm). This is especially important when you're asking in a forum and get tips from other users - they might not be the right ones when it comes down to retraction distance! If you want to use other firmware than the stock one like Klipper and you're looking out for about how other users set the configuration, be aware of the fact that the Go has its home position with the printhead above the right front corner and the Neo at the left front corner of the bed (which is driven completely to the back at that time).    </p> <p>The Go comes completely unmounted so you have to mount everything together by yourself. Therefore the price of the Go usually is a bit lower than the price of the Neo. The Kobra Neo comes pre-mounted, you only have to mount a few parts like the 'upstanding' frame onto the base frame.  </p> <p>See Anycubic's support page or Anycubic's support page of the blog of the Kobra series to find manuals, firmware, video tutorials and more of both the Go and the Neo.    </p> <p>The following list gives an overview of the most important specifications:    </p> <ul> <li>Printing dimensions: 250 x 220 x 220 mm (HxWxD)  </li> <li>Machine dimensions: 490 x 445 x 443 mm (plus filament holder mounted to the upper frame = approx. 630 mm height) </li> <li>Machine weight: approx. 7.5 kg  </li> <li>Aluminum frame  </li> <li>X-axis and Y-axis: belt driven, belt tension can be adjusted by knobs  </li> <li>Z-axis: single threaded rod  </li> <li>Printing speed: \u2264100 mm/s (Max speed)  </li> <li>Control panel: 2.4\" LCD screen with a control knob  </li> <li>Mainboard: TriGorilla V_3.0.6, 32bit, TMC2208 silent stepper drivers (soldered), microSD card reader, USB-C connector </li> <li>Extruder / feeder system:  <ul> <li>Bowden separated at Kobra Go </li> <li>Direct drive at Kobra Neo </li> </ul> </li> <li>Printing platform: 8.7 x 8.7 inches / 220 x 220 mm  </li> <li>Heated and magnetic bed with removable PEI-coated spring steel plate (one-sided coated at Go, double-sided coated at Neo)  </li> <li>Hot bed temperature: \u2264 230 \u00b0F / 110 \u00b0C  </li> <li>Bed leveling: \"Anycubic LeviQ\", which is a 25-point automatic bed leveling  </li> <li>Printing material: PLA / ABS / PETG &amp; TPU (optional housing recommended for certain material)  </li> <li>Single nozzle in a V5 heater block, filament diameter 1.75 mm  </li> <li>Comes with a E3D V6 compatible 0.4 mm brass nozzle which is replaceable  </li> <li>Nozzle temperature: \u2264 500 \u00b0F / 260 \u00b0C  </li> <li>Optional filament run-out detection sensor  </li> </ul> <p>Because a picture says more than thousand words - let me introduce you to my first 3D printer ever, the Kobra Neo in it's home position: </p>"},{"location":"printserver/","title":"Printserver","text":""},{"location":"printserver/#printserver","title":"Printserver","text":"<p>Sooner or later you'll come to the point that you want to use additional software like OctoPrint or so to control your printer. Yes, it's not necessary as you can control it directly using the printers control unit and it's advisable to stay in the same room and monitor the printing process to be able to intervene as soon as something is going wrong - but we all know how it is..  </p> <p>So having the possibility to not only send gcode commands directly to the printer for e.g. executing a PID tuning but also to use certain plugins or additional hardware to e.g. monitor the printing process isn't the worst idea. In case you're already using some kind of home automation software, you could also send yourself a fancy notification when the printing process is done. Sounds tempting? Ok, so you'd need additional hardware for that to run the desired software on. So let's have a look what might be an interesting and reasonable priced solution for that first.  </p>"},{"location":"printserver/#hardware","title":"Hardware","text":""},{"location":"printserver/#raspberry-pi","title":"Raspberry Pi","text":"<p>When you start looking around for a system the desired software should run on, the first thing you'll come across surely will be the Raspberry Pi (in the following named as \"RPi\"). The RPi is a little computer which became pretty famous since it entered the market. It's a Broadcom SoC 64bit ARM system with LAN (and WiFi within the newer versions) and a microSD card reader onboard which keeps the desired OS. It offers GPIOs to directly connect hardware like sensors to it and it draws only a little amount of power. Pretty much all of the regular software for 3D printing like the beforementioned OctoPrint or Mainsail or so are available as specific RPi image which makes it pretty easy and flawless to install even if you're not an expert. Just install the Raspberry Pi Imager, create the specific image, copy it to a sufficient microSD card and you're good to go - the installation will take a few minutes only. And as handy as it is - it might not be the best solution, especially these days.  </p> <p>Prices for the RPi went up to a ridiculous level (afaik at least in Europe and the US) - if they're even available at all. Also you don't want to get yourself an old RPi2B for example, it should be a RPi3B at least (referring to OctoPrint a RPi Zero 2W also works, it uses the same Broadcom SoC like the RPi3) - a RPi4 would be even better and advisable. Not only because of the pure processor power or the RAM - both is sufficient even with the RPi3 for example, but mostly because of the reason how the USB sockets are connected to the CPU. Afaik, up until the RPi3 the Broadcom BCM2837 only offers one USB port itself. This one port is split up by using a SMSC LAN9514 hub chip to get four USB connectors out of it and it also uses the LAN port.  </p> <p>If you're asking yourself now \"What the heck is this guy talking about - I have four USB connectors available there, so what's the problem?\" - well, let me try to explain it to you very simple: Imagine you connect your RPi3 to a monitor and plug in a mouse, keyboard, your 3D printer and a webcam to the USB sockets and maybe you also use the LAN connection (because everybody who knows wireless uses wires ;) ). Then you start your printing process sending the gcode file to the printer and start to observe the printing process using the camera. Then all of the informations are running across the same one and only USB port of the SoC (the main CPU). That means that most likely you'll find yourself noticing some kind of stuttering during the printing process and/or the stream of the webcam. That doesn't occur because of a lack of RAM or CPU power (what people use to assume) - that occurs because of the architecture and the bottleneck \"one USB port at the SoC\". So you can see it like a four lane street going down to one lane - as soon as there's (much) traffic on all of those four lanes, you'll get stuck in the traffic where it goes down to one lane.  </p> <p>So does that mean you shouldn't use a RPi? No, not at all, it works absolutely fine - just be aware of the fact that it might not be the best solution for your money during these times where they became pretty expensive.  </p> RPi plus Touchscreen <p>If you're using a RPi, you can add a touchscreen to it and install an additional software like OctoDash which gives you a nice clean UI for OctoPrint optimized for small screens. It allows you to display certain status informations and makes it possible to interact with OctoPrint directly using the touchscreen. Especially when you're using the Klipper firmware instead of the stock firmware this a great solution to still be able to monitor and control your printer while you're sitting in front of it as the regular control unit of your printer doesn't work with Klipper anymore.  </p> RPi plus (Web-)Cam <p>However, if you're already running a RPi(3) and face those kind of problems as mentioned above which may be caused by a connected webcam to the RPi, I'd suggest the following:  </p> <ul> <li>Switch to a cheap/old type of webcam which only offers a low resolution like 480p (640x480). You don't need 4K to see what's going on and by using a low resolution you can at least decrease the amount of informations that has to run through the mentioned bottleneck.  </li> <li>Don't create a time lapse video as it really is consuming a lot of processor power and RAM.</li> <li>Get rid of the USB cam and set up an IP cam (WiFi/LAN) instead which isn't connected to the RPi. Up to me this is even a better solution then downgrading the webcam as the RPi doesn't have to deal with the data from the IP cam at all. If you like to tinker and don't mind the probable effort, get yourself one of those cheap ESP32-CAM modules and set it up. Or just go for a cheap WiFi/LAN camera.   </li> <li>If you're already using a RPi\u00be with a RPi cam and don't have a sufficient housing for that yet, have a look at the thing from A_Leh: Anycubic Vyper/ Kobra Raspberry 4b (+3b) housing with camera attachment</li> <li>Last but not least: make sure you're using a good and fast microSD card and a good USB cable which connects the RPi to the printer.</li> </ul>"},{"location":"printserver/#other-sbc","title":"Other SBC","text":"<p>If you can't or don't want to get an RPi but still want to stick to one of those tiny tinker SBC (single board computer) units, you can check out the market what's available and compareable to a RPi, like an \"Orange Pi\", a \"Le Potato\" or so on. However, I'm not going into further details here as I personally don't use them and therefore can't give reliable informations about which boards exactly might be a god substitue to a RPi.  </p>"},{"location":"printserver/#old-android-devices","title":"Old Android Devices","text":"<p>Yes, you've read correct: certain software could also be installed onto your old Android device like your smartphone or your tablet. Namely especially OctoPrint has to be mentioned here. I won't go deeper here though due to my lack of experience with this solution - you'll find many informations about this around the web. One of those sources of informations I'd like to mention though is the video of Thomas Sanladerer: How to run OctoPrint on your phone! and the GitHub repository of feelfreelinux: octo4a.  </p> <p>Besides the possibilty to use your old android device as a printserver, you can also use it as an additional screen for software like OctoPrint. That means that you don't install e.g. OctoPrint itself on the android device - you install an app which connects with the running instance of OctoPrint and gives you a nice UI on your smartphone. By doing so you could mount your old phone at the printer and interact with OctoPrint using your touchscreen or just have certain informations displayed at the screen.  </p> <p>Info</p> <p>Especially when you flashed the Klipper firmware onto your mainboard, using an old Android device as an additional screen mounted to the printer is a great solution to still being able to execute direct commands or having status informations visible while sitting in front of your printer as the regular control unit doesn't work with the Klipper firmware anymore.    </p> USB OTG <ul> <li>I'd like to mention one of the probably biggest issues you might encouter: charging the device while having it connected to the printer at the same time.  While it shouldn't be a problem if you're having a device with a separate power plug or wireless charging, it might become a problem if you'd have to use some kind of solution which splits up the line for USB charging and OTG - not all devices work with that.  Additionally, I personally would be concerned about probably harming the printers mainboard due to a faulty cable or whatever. </li> <li>What also should be mentioned here as a warning is the fact that devices which are connected 24/7 to the charger might be a huge hazard as the battery could catch fire or even blow up. So keep that in mind if you're tempted to go this way.</li> </ul>"},{"location":"printserver/#old-regular-hardware","title":"Old \"Regular\" Hardware","text":"<p>If you have old hardware laying around like a laptop or so, you can also use that. Don't worry - even if it's pretty old in most of the cases it still would be sufficient. Install a Linux OS onto it and then install the desired software.   </p> <p>However, as much as I appreciate and love to re- and upcycle old hardware in general, one thing has to be mentioned: the amount of power they're drawing due to their old and mostly energy inefficient chipsets. It might not really come into account if your prints last only a few hours and after finishing them you turn everything off. But as soon as you think about running those machines pretty much 24/7 you should keep in mind that they might draw a lot of power which sums up at the end. Right now here in Germany we're paying about 0,40\u20ac/kWh, so it really matters just looking at the financial side of that - not to mention the ecological aspect.    </p>"},{"location":"printserver/#thin-clients","title":"Thin Clients","text":"<p>Now - get ready for the real deal: Thin Clients! Ok, might be a bit exxagerated, but I really love those fellas.  </p> <p>If you've never heard of them, let me give you a quick introduction: Thin Clients are computers which are often used by companies for e.g. setting up workstations for their employees or to have some kind of information desk or screen running somewhere. They have a small build factor, don't draw an excessive amount of power and usually come with connectors for LAN, USB, a monitor and so on. Especially newer models (like only a few years old) have hardware built in which would be even powerful enough to replace your daily driver for surfing the web, watching videos, writing stuff and so on. Generally speaking: the newer and bigger they are, the more they have to offer usually - I'm talking about energy efficient quadcore CPUs here and the possibility to put in up to 32GB or even 64GB of RAM, swapping in a SSD (2.5\", m2.SATA or m2.NVMe - that often depends on the age actually) and even run virtual machines (tip: ProxmoxVE) or containers (tip: Docker). Of course you could also just install a LinuxOS like Ubuntu or a headless Ubuntu Server and install your desired software directly there.  </p> <p>The (imho great) point is: you can get a pretty powerful and energy efficient machine which is a true x86 platform for just a little amount of money as companies use to sell them pretty cheap most of the time. You probably have to look out for a certain model a bit longer sometimes as they use to be sold out quite fast, but it would be worth it. Anyway - even if they're usually available for a fair price, I want to mention that it's advisable to not buy the very first offer you can find. Even though they're still cheap most of the times compared to a RPi4 for example, certain companies know about the potential and that people like to use them for tinkering around, so some companies call for much higher prices than others.  </p> Tips About Thin Clients <ul> <li>There are many different Thin Clients from different manufacturers available out there - a good site I'd like to recommend to gather around and check out the specs of different Thin Clients is ParkyTowers.  </li> <li>If you're looking for something really small, maybe look out for a Dell Wyse 3040 or 3020. They do have limited power and RAM possibilities compared to bigger Thin Clients, but for just acting as a headless print server instead of a RPi they're powerful enough.   </li> <li>I personally like the HP Thin Client T6x0 series as you can upgrade them really well. The higer the number, the newer the model and the more powerful, energy efficient and compatible with modern parts it is (e.g. T610 uses a 2.5\" SSD &amp; DDR3 SO-DIMM RAM while the T630 uses a m2.SATA SSD &amp; DDR4 SO-DIMM RAM). The 'downside' of them (if you even want to call it that way as they're still pretty small) is the bigger housing.   </li> </ul>"},{"location":"printserver/#nas-server","title":"NAS / Server","text":"<p>If you have a NAS or a server up and running already, you could also install the printing software onto that. In this case I'd assume that you already know what you're doing and that you don't need any advise though.   </p>"},{"location":"printserver/#software","title":"Software","text":"<p>When it comes down to the software that should run on the printserver, you can choose between different solutions. It also depends a bit which kind of firmware you're running. My personal opinion on this: if you're running the stock one which is Marlin based, just go with OctoPrint. If you're using Klipper firmware, you can stick to OctoPrint or use Marlin (or Fluidd, as they're basically made for Klipper). Yes, you could also look out for different software, but because those programs are commonly used you'll find a lot of informations about them and also many plugins for enhancing the capability even more. I'd recommend to do a little websearch on that, you might want to start with this article though: Ocbico: Mainsail vs. Fluidd vs. Octoprint - A Comparison</p>"},{"location":"printserver/#how-to-install","title":"How To Install","text":"<p>So in case you want to use hardware like the abovementioned Thin Clients, you probably don't know how to set it up and install the software. You'll find many guides and tutorials for that out there, so let me just mention the following:  </p> <ul> <li>For installing OctoPrint you can start your web research at All3DP: How to Install OctoPrint on Linux/Ubuntu.  </li> <li>If you want to install on an SBC, you might want to have a look at All3DP: How to Install OctoPrint/Klipper on an SBC: Tutorial.  </li> <li>Check out Kiauh as it isn't an installation script that makes everything a lot easier only for Klipper but also for OctoPrint, Mainsail, Fluidd and so on.     </li> </ul>"},{"location":"printserver/#camera","title":"Camera","text":"<p>As mentioned in the RPi section, if you connect a webcam directly to your printserver, I'd suggest to use a webcam which only offers a low resolution like 480p (640x480) as you don't need 4K for monitoring the printing process. Of course a more powerful hardware can also handle a higher resolution though. Preferably use a cam with a wide angle view and a fixed focus, so that you can see the whole area of the bed and there's no autofocus which gets irritated by the movement. If you want to create a time lapse video from your printing process, keep in mind that it's a pretty resource consuming task (CPU power, RAM and storage usage). So also here using a low resolution like 480p is adviseable.    </p> <p>However, I also would like to mention or even recommend general IP cameras (WiFi/LAN) which you could use. Also here it doesn't have to be a cam for a hundret bucks - a cheap one will do the job just fine. They often already come with the option to create time lapse videos and store it onto a microSD card also. If you like to tinker a bit, maybe get yourself a cheap ESP32-CAM module.  </p>"},{"location":"pro_set/","title":"Profiles & Settings","text":""},{"location":"pro_set/#profiles-settings","title":"Profiles &amp; Settings","text":"<p>The microSD card shipped with your printer should contain Cura profiles. If you don't have them, you can download them at Anycubic's support page but I'll list and link to them further below also. However, these profiles don't seem to always work right away, even though it's a good start. The specific profile and settings may differ from printer to printer, even within the same model type. The settings like print speed, layer height, extruder and bed temperature etc. also depend on the type of material you want to use (e.g. PLA/ABS/PETG/TPU). But also for the same type of filament material like PLA the settings often need to be adjusted again if you're using filament of a different manufacturer or even just another spool or colour of the same brand. here are countless guides about this topic in general, so I'd recommend to dig into it deeper using your preferred sites or specific videos.   </p> <p>However, there are users who offer their profiles for the Go and Neo, so that beginners have a better starting point if the stock ones don't seem to work for them. In the following I'll list them as far as I'm aware of them. Be aware though that you still have to check the settings and finetune them for your device.  </p>"},{"location":"pro_set/#go","title":"Go","text":"<p>The following list links to the specific profiles from Anycubic's firmware page (btw: I have no idea why they don't offer a profile for the Go for PETG):</p> <ul> <li>PLA v1.0 </li> <li>ABS v1.0</li> <li>TPU v1.0</li> </ul> <p>The following list links to profiles provided by users which I became aware of:   </p> Got a Go? <p>Do you own a Go and created profiles for it which could be useful for other users as well?  Did you made them available somewhere?  If so, send me an email to  <code>3dneo (at) quantentunnel.de</code>  and let me know about it, I'd be happy to set a link to it.   </p> <ul> <li>Ender 3/V2 profiles: Even though this is not a profile provided by a specific user, I want to mention that it seems that people got good results in using the Ender 3/V2 profile of Cura for the Go. So if nothing seems to work out, maybe give that a try.  </li> </ul>"},{"location":"pro_set/#neo","title":"Neo","text":"<p>The following list links to the specific profiles from Anycubic's firmware page: </p> <ul> <li>PLA v1.0) </li> <li>ABS v1.0</li> <li>TPU v1.0</li> <li>PETG v2.0</li> </ul> <p>The following list links to profiles provided by users which I became aware of: </p> <ul> <li>@sclebo05 offers his profiles for different slicers for the Kobra Neo: https://github.com/sclebo05/KobraNeoProfiles</li> </ul>"},{"location":"tools/","title":"Tools","text":""},{"location":"tools/#tools","title":"Tools","text":"<p>When it comes down to tinkering, the fun factor and the results raise and fall with the tools you have. So if you're new to this whole world and find yourself in front of an empty toolbox, the following tools might be a good start (the list will be extended by time).  </p> Quality Matters <p>If you're about to buy tools, you're probably tempted to get yourself cheap tools (which might be ok for certain parts tho). However, I personally just want to give you the advise to spend a bit more and get yourself some quality tools from well known brands. Yes, you might pay the same amount of money for one good wrench then you'd pay for a whole set, but believe me, it'll be worth it. Quality tools are made more precisely and from better material so they just last longer. So let's say you want to get yourself some hexagon socket tools, don't go for the cheapest ones out there. The cheap ones tend to become round on the edges pretty quick and it's really no fun at all to fiddle around with a 1.5mm hexagon socket tool trying to loosen up that little grub screw of the heater block with a messed up tool. Doing so, you could even harm the socket of the screw which could/would result in the fact that you either won't be able to get it out at all or that you'd have to replace it with a new one (which might be hard to find).  </p>"},{"location":"tools/#multimeter","title":"Multimeter","text":"<p>Get yourself a multimeter. You don't have to get a professional one, a cheap multimeter will do the job just fine. You'll need a multimeter to measure voltage and current and to measure if maybe a wire is broken somewhere. You can also measure if your limit switch is faulty or if a sensor or a thermistor is working correct.  </p>"},{"location":"tools/#hexagon-socket-tools","title":"Hexagon Socket Tools","text":"<p>You already got some of them with the printer I guess, but it's probably a good idea to get yourself some quality ones.  </p>"},{"location":"tools/#wrench","title":"Wrench","text":"<p>For tinkering at the Go/Neo, you don't necessarily need a whole set of wrenches as most of the screws are hexagon socket ones. However, I recommend to get yourself at least a sufficient one for the nozzle and one which fits the heater block. For the nozzle you can also use a socket wrench and for the heater block you could use a little adjustable wrench - just make sure that you don't get yourself a huge one as it might be hard to get around with that due to a bit of a limited space.  </p> <p>Tip</p> <p>I highly recommend to use a wrench instead of just some universal pair of pliers as the wrench fits the object perfectly and doesn't harm it because of its smooth surface.  </p>"},{"location":"tools/#soldering-iron","title":"Soldering Iron","text":"<p>It's always good to have a soldering iron because it allows you to solder wires together and so on. If you don't have one yet, don't go for a big one. I personally love my little 12W \"Weller Mini\" as it is thin and good to grab and parts don't tend to overheat quickly as it could happen when you use a 40W or 80W iron for example. There are well-priced soldering stations out there which allow you to adjust the power and the heat and which also offer a small hand piece, so I'd recommend you go for something like that. They usually also include a holder for the hot iron and something like a brass sponge or so to clean the tip.  However, make sure you'll have a fine tip as it makes it easier to fix tiny parts.  </p>"},{"location":"tools/#hot-air-gun","title":"Hot Air Gun","text":"<p>A hot air gun comes in handy if you have to disassamble your hotend after you've already taken it out of the printhead or in case you cartridge heater and/or thermistor is broken and therefore you can't use the heating function of the printer itself. You could either use a 'big' heat gun like the ones from the tool shop and put a 'minimizer' on top of it which concentrates the airflow (sorry, I don't how these things are called..) or you get yourself a hot air gun station which is used to solder SMD with. Here it's nice to be able to set the desired temperature and the little 'nozzles' for it make it easy to concentrate the heat flow where it should go.  </p>"},{"location":"tools/#silicone-mat","title":"Silicone Mat","text":"<p>Speaking about soldering irons and hot air guns, I personally use a silicone mat to put it on the table to protect the surface.  </p>"},{"location":"tools/#needles-for-the-nozzles","title":"Needles for the Nozzles","text":"<p>Get yourself some of those long acupuncture needles which fit the diameter of your nozzle. Maybe one of those for the stock 0.4mm nozzle already came with the printer. </p> <p>Tip</p> <p>Always use them when the nozzle is warm though as they tend to bend or even break if you try to push it into the cold nozzle where the hardened filament sticks in.  </p>"},{"location":"tools/#small-drills","title":"Small Drills","text":"<p>I personally like to use a 1.5mm and 2mm drill which is longer than a regular one to clean up a clogged PTFE tube of the heat break. First you stick a needle as far as you can into the warm nozzle which fits the diameter of the nozzle, then you disassamble the extruder and take out the PTFE tube. The little hole the needle created inside of the clogged tube leads the 1.5mm drill perfectly fine. After you went through with that one, switch to the 2mm drill and give it a good last cleaning. However, make sure you only use these drills for this specific purpose as you don't want to have some metal or wood chips sticking on the which then may stay in the tube.  </p> <p>Tip</p> <p>Always use the drill by hand - don't use your electric power drill for that as you might harm the tube!</p>"},{"location":"tools/#tweezers","title":"Tweezers","text":"<p>Get yourself some long handled tweezers, preferably a few different ones with different shaped and bent tips.  </p>"},{"location":"tools/#ferrules-specific-pliers","title":"Ferrules &amp; Specific Pliers","text":"<p>Being able to add ferrules to the end of wires is just great. You can get them as a set with the specific pliers for that and it's not even expensive. When you're looking out for that, make sure to get those kind of pliers which use four brackets to squeeze the ferrules and which engage during squeezing. The results will be much better than the ones that just use two brackets. Especially when it comes down to small ferrules it's also much easier to take out the ferrules afterwards as they don't stick in one side of the jaw.</p>"},{"location":"tools/#cable-ties","title":"Cable Ties","text":"<p>Get yourself some of those small cable ties, it's always good to have some of them laying around in your toolbox. </p>"},{"location":"tools/#slide-gauge","title":"Slide Gauge","text":"<p>A slide gauge comes in handy if you want to measure accuracy of e.g. your printed test cubes. I'd recommend to get a digital one as it's easier to read the measured value. However, keep in mind that these slide gauges (especially the cheap ones one usually buys) also have a measuring and a manufacturing tolerance - so don't go crazy about 0.05mm or so. </p>"},{"location":"tools/#height-gauge-for-abl-sensor","title":"Height Gauge for ABL Sensor","text":"<p>Well, even though this isn't a 'tool' you can buy, you probably want to print out the height gauge from Anycubic to make the leveling opration of the ABL sensor a bit easier. You have to make sure though that you're printer already works fine to print it to not mess up the height ratio of the tool.</p>"},{"location":"firmware/fw_klipper/","title":"Klipper (Mod)","text":""},{"location":"firmware/fw_klipper/#klipper-mod","title":"Klipper (Mod)","text":"<p>Can you run Klipper on the stock mainboard? Well - it seems that you can!  </p> <p>Reddit user xpeng121 postet a description about how to get it done: Install Klipper on Kobra Go or Neo</p> <p>Warning</p> <ul> <li>Keep in mind that even though the stock mainboard of the Go and the Neo is the same, you have to adjust certain settings of the Klipper configuration depending on your specific model!</li> <li>Be aware of the fact that the control unit/display of the printer doesn't work after flashing Klipper (due to the fact that the SPI the unit is connected to isn't supported by Klipper yet). So you'd need additional software like OctoPrint or Mainsail or so to be able to also control the printer manually. See the chapter \"Printserver\" if you don't have e.g. OctoPrint installed yet.    </li> </ul> What Is Klipper? <p>If you don't know what Klipper is, this may be a good start for your research: All3DP: Klipper</p> Cura and Klipper <p>Even though Cura and Klipper work perfectly together, there are a few things to be aware of. Certain classic G-code commands aren't directly supported by Klipper as it uses extended G-code and scripts for certain things. As an example the G-code command <code>M0</code> (unconditional stop) isn't recognized by Klipper, you'd have to use the extended G-code command <code>PAUSE</code> for that. Also there are a few functions of Cura which should improve the print quality which interfere with Klipper's own approaches for that (like Pressure Advance or Input Shaping). You'll find a good overview of what to be aware of in the tutorial from All3DP: Cura &amp; Klipper: How to Make Them Work Together.</p>"},{"location":"firmware/fw_marlin/","title":"Stock Firmware (Marlin Based)","text":""},{"location":"firmware/fw_marlin/#stock-firmware-marlin-based","title":"Stock Firmware (Marlin Based)","text":"<p>The official stock firmware for both models is based on the Marlin firmware v2.0.x.  </p> <p>You can either  </p> <ul> <li>download the necessary <code>firmware.bin</code> file at Anycubic's firmware &amp; software page for the <ul> <li>Kobra Go v1.3.4</li> <li>Kobra Neo v1.3.3 </li> </ul> </li> <li>download the source code from their specific GitHub repositories to compile your own:  <ul> <li>Kobra Go GitHub repository </li> <li>Kobra Neo GitHub repository </li> </ul> </li> </ul> <p>In case you want to build and compile your own <code>firmware.bin</code> file, you can follow the instructions of @jojos38 Tutorial: How to build Anycubic Marlin sourcecode into a firmware.bin.</p>"},{"location":"firmware/fw_marlin/#update-procedure","title":"Update Procedure","text":"<p>To update the firmware of your printer, copy the file <code>firmware.bin</code> onto the microSD card. Turn off the printer and plug the card into the cardreader which is located at the front of the frame (next to the USB connector). The card must be inserted with the contacs facing upwards. Then turn on your printer. You'll see a black screen with \"Updating Firmware...\" displayed. After a certain time the Anycubic logo will appear and shortly after that the regular main screen will appear. Shut down the printer again and take out the card (push it in a bit to unlock it and make it come out a bit, then just pull it out). Turn on the printer again, go to \"Menu\" and then \"About\" and check if the correct firmware version is displayed. If so, everything is fine. If not, check if you really copied the correct version onto the card and proceed the update again.   </p>"},{"location":"firmware/fw_marlin/#settings","title":"Settings","text":"<p>In the following I'll list the (imho) most important settings from the <code>../source/Marlin/Configuration.h</code> and <code>../source/Marlin/Configuration_adv.h</code>. You can find these files at the GitHub repositories for the specific model (see links below).  </p>"},{"location":"firmware/fw_marlin/#go","title":"Go","text":"<p>The following represents the state of February 2023 and firmware version 1.3.4. You can find the files <code>Configuration.h</code>and<code>Configuration_adv.h</code> here: https://github.com/ANYCUBIC-3D/Kobra_Go/tree/master/source/Marlin </p> Most important (imho) settings for Kobra GO from Configuration.h (v1.3.4)<pre><code>#define BAUDRATE 115200  // This setting determines the communication speed of the printer.\n--\n#define MOTHERBOARD BOARD_AC_TRI_F1_V1  // Choose the name from boards.h that matches your setup\n--\n#define DEFAULT_NOMINAL_FILAMENT_DIA 1.75 // Generally expected filament diameter (1.75, 2.85, 3.0, ...). Used for Volumetric, Filament Width Sensor, etc.\n--\nSensortypes\n#define TEMP_SENSOR_0 5  // HOTEND Thermistor Type: 5 : 100K thermistor - ATC Semitec 104GT-2/104NT-4-R025H42G (Used in ParCan, J-Head, and E3D) (4.7k pullup)\n#define TEMP_SENSOR_BED 1 // BED Thermistor Type: 1 : 100k thermistor - best choice for EPCOS 100k (4.7k pullup)\n--\n// Dummy thermistor constant temperature readings, for use with 998 and 999\n#define DUMMY_THERMISTOR_998_VALUE 25\n#define DUMMY_THERMISTOR_999_VALUE 100\n--\n// Use temp sensor 1 as a redundant sensor with sensor 0. If the readings from the two sensors differ too much the print will be aborted.\n//#define TEMP_SENSOR_1_AS_REDUNDANT\n#define MAX_REDUNDANT_TEMP_SENSOR_DIFF 10\n\n#define TEMP_RESIDENCY_TIME     2  // (seconds) Time to wait for hotend to \"settle\" in M109\n#define TEMP_WINDOW              1  // (\u00b0C) Temperature proximity for the \"temperature reached\" timer\n#define TEMP_HYSTERESIS          3  // (\u00b0C) Temperature proximity considered \"close enough\" to the target\n\n#define TEMP_BED_RESIDENCY_TIME 1  // (seconds) Time to wait for bed to \"settle\" in M190\n#define TEMP_BED_WINDOW          1  // (\u00b0C) Temperature proximity for the \"temperature reached\" timer\n#define TEMP_BED_HYSTERESIS      3  // (\u00b0C) Temperature proximity considered \"close enough\" to the target\n\n--\n// Below this temperature the heater will be switched off because it probably indicates a broken thermistor wire.\n#define HEATER_0_MINTEMP   5  \n#define BED_MINTEMP        5  \n--\n// Above this temperature the heater will be switched off. This can protect components from overheating, but NOT from shorts and failures.\n#define HEATER_0_MAXTEMP 275  \n#define BED_MAXTEMP      120  // max target temp-10=110\n--\nPID\n// Comment the following line to disable PID and enable bang-bang.\n#define PIDTEMP\n#define BANG_MAX 255     // Limits current to nozzle while in bang-bang mode; 255=full current\n#define PID_MAX BANG_MAX // Limits current to nozzle while PID is active (see PID_FUNCTIONAL_RANGE below); 255=full current\n#define PID_K1 0.95      // Smoothing factor within any PID loop\n\n#define PIDTEMPBED  // If this option is enabled set PID constants below.\n  #define DEFAULT_bedKp 97.1\n  #define DEFAULT_bedKi 1.41\n  #define DEFAULT_bedKd 1675.16\n--\nExtruder\n#define PREVENT_COLD_EXTRUSION\n#define EXTRUDE_MINTEMP 170\n#define PREVENT_LENGTHY_EXTRUDE\n#define EXTRUDE_MAXLENGTH 300\n--\nThermal Runaway Protection\n#define THERMAL_PROTECTION_HOTENDS // Enable thermal protection for all extruders\n#define THERMAL_PROTECTION_BED     // Enable thermal protection for the heated bed\n#define THERMAL_PROTECTION_CHAMBER // Enable thermal protection for the heated chamber\n--\nEnstops (note: NO max endstops!)\n#define USE_XMIN_PLUG\n#define USE_YMIN_PLUG\n#define USE_ZMIN_PLUG\n//#define USE_XMAX_PLUG\n//#define USE_YMAX_PLUG\n//#define USE_ZMAX_PLUG\n\n// Mechanical endstop with COM to ground and NC to Signal uses \"false\" here (most common setup).\n#define X_MIN_ENDSTOP_INVERTING true // Set to true to invert the logic of the endstop.\n#define Y_MIN_ENDSTOP_INVERTING true // Set to true to invert the logic of the endstop.\n#define Z_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.\n--\nStepper drivers\n#define X_DRIVER_TYPE  TMC2208\n#define Y_DRIVER_TYPE  TMC2208\n#define Z_DRIVER_TYPE  TMC2208\n#define E0_DRIVER_TYPE TMC2208\n--\nMovement settings: X, Y, Z, E0\n#define DEFAULT_AXIS_STEPS_PER_UNIT   { 80, 80, 400, 103 } // Default Axis Steps Per Unit (steps/mm); Override with M92\n#define DEFAULT_MAX_FEEDRATE          { 300, 300, 4, 25 }  // Default Max Feed Rate (mm/s); Override with M203   \n#define DEFAULT_MAX_ACCELERATION      { 500, 500, 100, 1000 } // Default Max Acceleration (change/s) change = mm/s (Maximum start speed for accelerated moves); Override with M201\n--\nDefault Acceleration (change/s) change = mm/s; Override with M204: M204 P = Acceleration / M204 R = Retract Acceleration / M204 T = Travel Acceleration\n#define DEFAULT_ACCELERATION          500     // X, Y, Z and E acceleration for printing moves\n#define DEFAULT_RETRACT_ACCELERATION  500    // E acceleration for retracts\n#define DEFAULT_TRAVEL_ACCELERATION   1000    // X, Y, Z acceleration for travel (non printing) moves\n--\nDefault Jerk limits (mm/s); Override with M205 X Y Z E (\"Jerk\" specifies the minimum speed change that requires acceleration. When changing speed and direction, if the difference is less than the value set here, it may happen instantaneously.)\n#define CLASSIC_JERK\n  #define DEFAULT_XJERK  5\n  #define DEFAULT_YJERK  5\n  #define DEFAULT_ZJERK  5\n--\nJunction Deviation Factor\n#define JUNCTION_DEVIATION_MM 0.013 // (mm) Distance from real junction edge\n#define JD_HANDLE_SMALL_SEGMENTS    // Use curvature estimation instead of just the junction angle for small segments (&lt; 1mm) with large junction angles (&gt; 135\u00b0).\n--\nS-Curve Acceleration (This option eliminates vibration during printing by fitting a B\u00e9zier curve to move acceleration, producing much smoother direction changes.)\n#define S_CURVE_ACCELERATION\n--\nProbe\n#define Z_MIN_PROBE_PIN AUTO_LEVEL_RX_PIN\n#define FIX_MOUNTED_PROBE\n#define NOZZLE_TO_PROBE_OFFSET { -20.8,0, 0 } // Probe to RIGHT of the Nozzle has a Positive X offset\n// Most probes should stay away from the edges of the bed, but with NOZZLE_AS_PROBE this can be negative for a wider probing area.\n#define PROBING_MARGIN_LEFT  5\n#define PROBING_MARGIN_RIGHT 5\n#define PROBING_MARGIN_FRONT 5\n#define PROBING_MARGIN_BACK  15\n#define XY_PROBE_SPEED (200*60)  // X and Y axis travel speed (mm/min) between probes\n#define Z_PROBE_SPEED_FAST (4*60)  // Feedrate (mm/min) for the first approach when double-probing (MULTIPLE_PROBING == 2)\n#define Z_PROBE_SPEED_SLOW (Z_PROBE_SPEED_FAST / 2)  // Feedrate (mm/min) for the \"accurate\" probe of each point\n#define MULTIPLE_PROBING 2  //  A total of 2 does fast/slow probes with a weighted average.\n// Z probes require clearance when deploying, stowing, and moving between probe points to avoid hitting the bed and other hardware. Inductive probes need space to keep from triggering early.\n// Use these settings to specify the distance (mm) to raise the probe (or lower the bed). The values set here apply over and above any (negative) probe Z Offset set with NOZZLE_TO_PROBE_OFFSET, M851, or the LCD.\n// Only integer values &gt;= 1 are valid here. \n// Example: `M851 Z-5` with a CLEARANCE of 4  =&gt;  9mm from bed to nozzle.\n//     But: `M851 Z+1` with a CLEARANCE of 2  =&gt;  2mm from bed to nozzle.\n#define Z_CLEARANCE_DEPLOY_PROBE   10 // Z Clearance for Deploy/Stow\n#define Z_CLEARANCE_BETWEEN_PROBES  5 // Z Clearance between probe points\n#define Z_CLEARANCE_MULTI_PROBE     5 // Z Clearance between multiple probes\n#define Z_PROBE_LOW_POINT          -10 // Farthest distance below the trigger-point to go before stopping\n// For M851 give a range for adjusting the Z probe offset\n#define Z_PROBE_OFFSET_RANGE_MIN -10\n#define Z_PROBE_OFFSET_RANGE_MAX 10\n// Enable the M48 repeatability test to test probe accuracy\n#define Z_MIN_PROBE_REPEATABILITY_TEST\n--\n// @section extruder\n#define DISABLE_E false             // Disable the extruder when not stepping\n#define DISABLE_INACTIVE_EXTRUDER   // Keep only the active extruder enabled\n--\n// @section machine\n// Invert the stepper direction. Change (or reverse the motor connector) if an axis goes the wrong way.\n#define INVERT_X_DIR false\n#define INVERT_Y_DIR false\n#define INVERT_Z_DIR true\n--\n// @section extruder\n// For direct drive extruder v9 set to true, for geared extruder set to false.\n#define INVERT_E0_DIR false\n--\n// @section homing\n#define Z_HOMING_HEIGHT  10      // (mm) Minimal Z height before homing (G28) for Z clearance above the bed, clamps, ...\n// Direction of endstops when homing; 1=MAX, -1=MIN\n#define X_HOME_DIR -1\n#define Y_HOME_DIR -1\n#define Z_HOME_DIR -1\n--\n// @section machine\n// The size of the print bed\n#define X_BED_SIZE 230\n#define Y_BED_SIZE 230\n// Travel limits (mm) after homing, corresponding to endstop positions.\n#define X_MIN_POS -13\n#define Y_MIN_POS -9\n#define Z_MIN_POS -10\n#define X_MAX_POS (X_BED_SIZE + 8)\n#define Y_MAX_POS (Y_BED_SIZE + 8)\n#define Z_MAX_POS 250\n--\nFilament rounout sensor\n#define FILAMENT_RUNOUT_SENSOR\n  #define FIL_SENSOR_OPTIONAL        true\n  #define FIL_RUNOUT_ENABLED_DEFAULT true // Enable the sensor on startup. Override with M412 followed by M500.\n  #define NUM_RUNOUT_SENSORS   1          // Number of sensors, up to one per extruder. Define a FIL_RUNOUT#_PIN for each.\n  #define FIL_RUNOUT_STATE     LOW        // Pin state indicating that filament is NOT present.\n  #define FIL_RUNOUT_PULLUP               // Use internal pullup for filament runout pins.\n#define FILAMENT_RUNOUT_SCRIPT \"M600\" // Set one or more commands to execute on filament runout. (After 'M412 H' Marlin will ask the host to handle the process.)\n--\nBed Leveling\n#define AUTO_BED_LEVELING_BILINEAR  // Probe several points in a grid. You specify the rectangle and the density of sample points. The result is a mesh, best for large or uneven beds.\n#define ENABLE_LEVELING_AFTER_G28  // Normally G28 leaves leveling disabled on completion. Enable one of these options to restore the prior leveling state or to always enable leveling immediately after G28.\n#define PREHEAT_BEFORE_LEVELING  // Auto-leveling needs preheating\n  #define LEVELING_NOZZLE_TEMP 120  // (\u00b0C) Only applies to E0 at this time; Nozzle temp 120\u00b0C\n  #define LEVELING_BED_TEMP     60  // Bed temp 60\u00b0C\n#define DEBUG_LEVELING_FEATURE  //  Enable detailed logging of G28, G29, M48, etc.; Turn on with the command 'M111 S32'.; NOTE: Requires a lot of PROGMEM!\n#define ENABLE_LEVELING_FADE_HEIGHT  // Gradually reduce leveling correction until a set height is reached, at which point movement will be level to the machine's XY plane. The height can be set with M420 Z&lt;height&gt;\n  #define DEFAULT_LEVELING_FADE_HEIGHT 0.0 // (mm) Default fade height.\n\nNote: G26 Mesh Valifation Pattern tool is DEactivated! : //#define G26_MESH_VALIDATION\n\n#define GRID_MAX_POINTS_X 5  // Set the number of grid points per dimension.\n#define GRID_MAX_POINTS_Y GRID_MAX_POINTS_X\n--\nHoming\n// Manually set the home position. Leave these undefined for automatic settings.\n#define MANUAL_X_HOME_POS X_MIN_POS\n#define MANUAL_Y_HOME_POS Y_MIN_POS\n#define MANUAL_Z_HOME_POS 0\n--\nEEPROM\n// Persistent storage to preserve configurable settings across reboots.\n// M500 - Store settings to EEPROM.\n// M501 - Read settings from EEPROM. (i.e., Throw away unsaved changes)\n// M502 - Revert settings to \"factory\" defaults. (Follow with M500 to init the EEPROM.)\n#define EEPROM_SETTINGS  // Persistent storage with M500 and M501\n#define EEPROM_CHITCHAT  // Give feedback on EEPROM commands. Disable to save PROGMEM.\n#define EEPROM_BOOT_SILENT  // Keep M503 quiet and only give errors during first load\n#define EEPROM_AUTO_INIT  // Init EEPROM automatically on any errors.\n--\nTemperature - Preheat Constants\n#define PREHEAT_1_LABEL       \"PLA\"\n#define PREHEAT_1_TEMP_HOTEND 190\n#define PREHEAT_1_TEMP_BED     60\n#define PREHEAT_1_FAN_SPEED     0 // Value from 0 to 255\n\n#define PREHEAT_2_LABEL       \"ABS\"\n#define PREHEAT_2_TEMP_HOTEND 240\n#define PREHEAT_2_TEMP_BED    110\n#define PREHEAT_2_FAN_SPEED     0 // Value from 0 to 255\n--\nNozzle Park \n// Park the nozzle at the given XYZ position on idle or G27. The \"P\" parameter controls the action applied to the Z axis:\n// P0  (Default) If Z is below park Z raise the nozzle.\n// P1  Raise the nozzle always to Z-park height.\n// P2  Raise the nozzle by Z-park amount, limited to Z_MAX_POS.\n\n#define NOZZLE_PARK_FEATURE\n\n#if ENABLED(NOZZLE_PARK_FEATURE)\n  // Specify a park position as { X, Y, Z_raise }\n  #define NOZZLE_PARK_POINT { (X_MIN_POS + 10), (Y_MAX_POS - 10), 10 }\n  #define NOZZLE_PARK_X_ONLY          // X move only is required to park\n  //#define NOZZLE_PARK_Y_ONLY          // Y move only is required to park\n  #define NOZZLE_PARK_Z_RAISE_MIN   2   // (mm) Always raise Z by at least this distance\n  #define NOZZLE_PARK_XY_FEEDRATE 100   // (mm/s) X and Y axes feedrate (also used for delta Z axis)\n  #define NOZZLE_PARK_Z_FEEDRATE    5   // (mm/s) Z axis feedrate (not used for delta printers)\n--\n/**\n * Print Job Timer\n *\n * Automatically start and stop the print job timer on M104/M109/M190.\n *\n *   M104 (hotend, no wait) - high temp = none,        low temp = stop timer\n *   M109 (hotend, wait)    - high temp = start timer, low temp = stop timer\n *   M190 (bed, wait)       - high temp = start timer, low temp = none\n *\n * The timer can also be controlled with the following commands:\n *\n *   M75 - Start the print job timer\n *   M76 - Pause the print job timer\n *   M77 - Stop the print job timer\n */\n#define PRINTJOB_TIMER_AUTOSTART\n--\nLANGUAGE of the UI\n#define LCD_LANGUAGE zh_CN  // Chinese (Simplified)\n#define LCD_LANGUAGE_AUTO_SAVE \n#define LCD_LANGUAGE_2 en  // English\n--\nENCODER SETTINGS\n#define ENCODER_PULSES_PER_STEP 4  // This option overrides the default number of encoder pulses needed to produce one step. Should be increased for high-resolution encoders.\n#define ENCODER_STEPS_PER_MENU_ITEM 1  // Use this option to override the number of step signals required to move between next/prev menu items.\n--\nDISPLAY\n#define TFT_GENERIC  // Generic TFT with detailed options\n#define TFT_DRIVER ST7796\n#define TFT_INTERFACE_SPI  // Interface.\n#define TFT_RES_320x240  // TFT Resolution.\n#define TFT_COLOR_UI  // Marlin Default Menus, Touch Friendly, using full TFT capabilities\n</code></pre> Most important (imho) settings for GO from Configuration_adv.h (v1.3.4)<pre><code>Thermal Protection / Thermal Runaway -&gt; Hotend:\n#define THERMAL_PROTECTION_PERIOD 20         // Seconds\n#define THERMAL_PROTECTION_HYSTERESIS 10     // Degrees Celsius\n#define ADAPTIVE_FAN_SLOWING              // Slow part cooling fan if temperature drops\n#define ADVANCED_PAUSE_FEATURE\n\nThermal Protection / Thermal Runaway -&gt; Bed:\n#define THERMAL_PROTECTION_BED_PERIOD        20 // Seconds\n#define THERMAL_PROTECTION_BED_HYSTERESIS     2 // Degrees Celsius\nManual Feedrates &amp; Smallest Z-Move using the Control Panel\n#define MANUAL_FEEDRATE { 50*60, 50*60, 4*60, 2*60 } // (mm/min) Feedrates for manual moves along X, Y, Z, E from panel\n#define FINE_MANUAL_MOVE 0.025 // (mm) Smallest manual Z move (&lt; 0.1mm)\n\nPower Loss Recovery:\n#define PLR_ENABLED_DEFAULT   true // Power Loss Recovery enabled by default. (Set with 'M413 Sn' &amp; M500)\n#define POWER_LOSS_MIN_Z_CHANGE 0.05 // (mm) Minimum Z change before saving power-loss data\n\nBabystepping (only activated for Z-Axis!):\n#define BABYSTEP_INVERT_Z false           // Change if Z babysteps should go the other way\n#define BABYSTEP_MILLIMETER_UNITS         // Specify BABYSTEP_MULTIPLICATOR_(XY|Z) in mm instead of micro-steps\n#define BABYSTEP_MULTIPLICATOR_Z  0.02f    // (steps or mm) Steps or millimeter distance for each Z babystep\n#define BABYSTEP_MULTIPLICATOR_XY 1       // (steps or mm) Steps or millimeter distance for each XY babystep\n\nLinear Advance is NOT Activated:\n//#define LIN_ADVANCE\n\nAdvanced Pause (Experimental feature for filament change support and for parking the nozzle when paused):\n#define ADVANCED_PAUSE_FEATURE\n  #define PAUSE_PARK_RETRACT_FEEDRATE         60  // (mm/s) Initial retract feedrate.\n  #define PAUSE_PARK_RETRACT_LENGTH           20  // (mm) Initial retract.\n                                                  // This short retract is done immediately, before parking the nozzle.\n  #define FILAMENT_CHANGE_UNLOAD_FEEDRATE     10  // (mm/s) Unload filament feedrate. This can be pretty fast.\n  #define FILAMENT_CHANGE_UNLOAD_ACCEL        25  // (mm/s^2) Lower acceleration may allow a faster feedrate.\n  #define FILAMENT_CHANGE_UNLOAD_LENGTH      100  // (mm) The length of filament for a complete unload.\n                                                  //   For Bowden, the full length of the tube and nozzle.\n                                                  //   For direct drive, the full length of the nozzle.\n                                                  //   Set to 0 for manual unloading.\n  #define FILAMENT_CHANGE_SLOW_LOAD_FEEDRATE   6  // (mm/s) Slow move when starting load.\n  #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH     0  // (mm) Slow length, to allow time to insert material.\n                                                  // 0 to disable start loading and skip to fast load only\n  #define FILAMENT_CHANGE_FAST_LOAD_FEEDRATE   6  // (mm/s) Load filament feedrate. This can be pretty fast.\n  #define FILAMENT_CHANGE_FAST_LOAD_ACCEL     25  // (mm/s^2) Lower acceleration may allow a faster feedrate.\n  #define FILAMENT_CHANGE_FAST_LOAD_LENGTH     0  // (mm) Load length of filament, from extruder gear to nozzle.\n                                                  //   For Bowden, the full length of the tube and nozzle.\n                                                  //   For direct drive, the full length of the nozzle.\n  //#define ADVANCED_PAUSE_CONTINUOUS_PURGE       // Purge continuously up to the purge length until interrupted.\n  #define ADVANCED_PAUSE_PURGE_FEEDRATE        3  // (mm/s) Extrude feedrate (after loading). Should be slower than load feedrate.\n  #define ADVANCED_PAUSE_PURGE_LENGTH         50  // (mm) Length to extrude after loading.\n                                                  //   Set to 0 for manual extrusion.\n                                                  //   Filament can be extruded repeatedly from the Filament Change menu\n                                                  //   until extrusion is consistent, and to purge old filament.\n  #define ADVANCED_PAUSE_RESUME_PRIME          0  // (mm) Extra distance to prime nozzle after returning from park.\n  //#define ADVANCED_PAUSE_FANS_PAUSE             // Turn off print-cooling fans while the machine is paused.\n\n                                                  // Filament Unload does a Retract, Delay, and Purge first:\n  #define FILAMENT_UNLOAD_PURGE_RETRACT       13  // (mm) Unload initial retract length.\n  #define FILAMENT_UNLOAD_PURGE_DELAY       5000  // (ms) Delay for the filament to cool after retract.\n  #define FILAMENT_UNLOAD_PURGE_LENGTH         8  // (mm) An unretract is done, then this length is purged.\n  #define FILAMENT_UNLOAD_PURGE_FEEDRATE      25  // (mm/s) feedrate to purge before unload\n\n  #define PAUSE_PARK_NOZZLE_TIMEOUT           45  // (seconds) Time limit before the nozzle is turned off for safety.\n  #define FILAMENT_CHANGE_ALERT_BEEPS         10  // Number of alert beeps to play when a response is needed.\n  #define PAUSE_PARK_NO_STEPPER_TIMEOUT           // Enable for XYZ steppers to stay powered on during filament change.\n\n  #define PARK_HEAD_ON_PAUSE                      // Park the nozzle during pause and filament change.\n</code></pre>"},{"location":"firmware/fw_marlin/#neo","title":"Neo","text":"<p>The following represents the state of February 2023 and firmware version 1.3.3. You can find the files <code>Configuration.h</code>and<code>Configuration_adv.h</code> here: https://github.com/ANYCUBIC-3D/Kobra_Neo/tree/master/source/Marlin</p> Most important (imho) settings for Kobra NEO in Configuration.h (v1.3.3)<pre><code>#define BAUDRATE 115200  // This setting determines the communication speed of the printer.\n--\n#define MOTHERBOARD BOARD_AC_TRI_F1_V1  // Choose the name from boards.h that matches your setup\n--\n#define DEFAULT_NOMINAL_FILAMENT_DIA 1.75 // Generally expected filament diameter (1.75, 2.85, 3.0, ...). Used for Volumetric, Filament Width Sensor, etc.\n--\nSensortypes\n#define TEMP_SENSOR_0 5  // HOTEND Thermistor Type: 5 : 100K thermistor - ATC Semitec 104GT-2/104NT-4-R025H42G (Used in ParCan, J-Head, and E3D) (4.7k pullup)\n#define TEMP_SENSOR_BED 1 // BED Thermistor Type: 1 : 100k thermistor - best choice for EPCOS 100k (4.7k pullup)\n--\n// Dummy thermistor constant temperature readings, for use with 998 and 999\n#define DUMMY_THERMISTOR_998_VALUE 25\n#define DUMMY_THERMISTOR_999_VALUE 100\n--\n// Use temp sensor 1 as a redundant sensor with sensor 0. If the readings from the two sensors differ too much the print will be aborted.\n//#define TEMP_SENSOR_1_AS_REDUNDANT\n#define MAX_REDUNDANT_TEMP_SENSOR_DIFF 10\n\n#define TEMP_RESIDENCY_TIME     5  // (seconds) Time to wait for hotend to \"settle\" in M109\n#define TEMP_WINDOW              1  // (\u00b0C) Temperature proximity for the \"temperature reached\" timer\n#define TEMP_HYSTERESIS          3  // (\u00b0C) Temperature proximity considered \"close enough\" to the target\n\n#define TEMP_BED_RESIDENCY_TIME 5  // (seconds) Time to wait for bed to \"settle\" in M190\n#define TEMP_BED_WINDOW          1  // (\u00b0C) Temperature proximity for the \"temperature reached\" timer\n#define TEMP_BED_HYSTERESIS      3  // (\u00b0C) Temperature proximity considered \"close enough\" to the target\n--\n// Below this temperature the heater will be switched off because it probably indicates a broken thermistor wire.\n#define HEATER_0_MINTEMP   5  \n#define BED_MINTEMP        5  \n--\n// Above this temperature the heater will be switched off. This can protect components from overheating, but NOT from shorts and failures.\n#define HEATER_0_MAXTEMP 275  \n#define BED_MAXTEMP      120  // max target temp-10=110\n--\nPID\n// Comment the following line to disable PID and enable bang-bang.\n#define PIDTEMP\n#define BANG_MAX 255     // Limits current to nozzle while in bang-bang mode; 255=full current\n#define PID_MAX BANG_MAX // Limits current to nozzle while PID is active (see PID_FUNCTIONAL_RANGE below); 255=full current\n#define PID_K1 0.95      // Smoothing factor within any PID loop\n\n#define PIDTEMPBED  // If this option is enabled set PID constants below.\n  #define DEFAULT_bedKp 97.1\n  #define DEFAULT_bedKi 1.41\n  #define DEFAULT_bedKd 1675.16\n--\nExtruder\n#define PREVENT_COLD_EXTRUSION\n#define EXTRUDE_MINTEMP 170\n#define PREVENT_LENGTHY_EXTRUDE\n#define EXTRUDE_MAXLENGTH 300\n--\nThermal Runaway Protection\n#define THERMAL_PROTECTION_HOTENDS // Enable thermal protection for all extruders\n#define THERMAL_PROTECTION_BED     // Enable thermal protection for the heated bed\n#define THERMAL_PROTECTION_CHAMBER // Enable thermal protection for the heated chamber\n--\nEnstops (note: NO max endstops!)\n#define USE_XMIN_PLUG\n#define USE_YMIN_PLUG\n#define USE_ZMIN_PLUG\n//#define USE_XMAX_PLUG\n//#define USE_YMAX_PLUG\n//#define USE_ZMAX_PLUG\n\n// Mechanical endstop with COM to ground and NC to Signal uses \"false\" here (most common setup).\n#define X_MIN_ENDSTOP_INVERTING true // Set to true to invert the logic of the endstop.\n#define Y_MIN_ENDSTOP_INVERTING true // Set to true to invert the logic of the endstop.\n#define Z_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.\n--\nStepper drivers\n#define X_DRIVER_TYPE  TMC2208\n#define Y_DRIVER_TYPE  TMC2208\n#define Z_DRIVER_TYPE  TMC2208\n#define E0_DRIVER_TYPE TMC2208\n--\nMovement settings: X, Y, Z, E0\n#define DEFAULT_AXIS_STEPS_PER_UNIT   { 80, 80, 400, 390 } // Default Axis Steps Per Unit (steps/mm); Override with M92\n#define DEFAULT_MAX_FEEDRATE          { 300, 300, 4, 25 }  // Default Max Feed Rate (mm/s); Override with M203   \n#define DEFAULT_MAX_ACCELERATION      { 500, 500, 100, 500 } // Default Max Acceleration (change/s) change = mm/s (Maximum start speed for accelerated moves); Override with M201\n--\nDefault Acceleration (change/s) change = mm/s; Override with M204: M204 P = Acceleration / M204 R = Retract Acceleration / M204 T = Travel Acceleration\n#define DEFAULT_ACCELERATION          500     // X, Y, Z and E acceleration for printing moves\n#define DEFAULT_RETRACT_ACCELERATION  500    // E acceleration for retracts\n#define DEFAULT_TRAVEL_ACCELERATION   1000    // X, Y, Z acceleration for travel (non printing) moves\n--\nDefault Jerk limits (mm/s); Override with M205 X Y Z E (\"Jerk\" specifies the minimum speed change that requires acceleration. When changing speed and direction, if the difference is less than the value set here, it may happen instantaneously.)\n#define CLASSIC_JERK\n  #define DEFAULT_XJERK  5\n  #define DEFAULT_YJERK  5\n  #define DEFAULT_ZJERK  5\n--\nJunction Deviation Factor\n#define JUNCTION_DEVIATION_MM 0.013 // (mm) Distance from real junction edge\n#define JD_HANDLE_SMALL_SEGMENTS    // Use curvature estimation instead of just the junction angle for small segments (&lt; 1mm) with large junction angles (&gt; 135\u00b0).\n--\nS-Curve Acceleration (This option eliminates vibration during printing by fitting a B\u00e9zier curve to move acceleration, producing much smoother direction changes.)\n#define S_CURVE_ACCELERATION\n--\nProbe\n#define Z_MIN_PROBE_PIN AUTO_LEVEL_RX_PIN\n#define FIX_MOUNTED_PROBE\n#define NOZZLE_TO_PROBE_OFFSET { 37.5,0, 0 } // Probe to RIGHT of the Nozzle has a Positive X offset\n// Most probes should stay away from the edges of the bed, but with NOZZLE_AS_PROBE this can be negative for a wider probing area.\n#define PROBING_MARGIN_LEFT  10\n#define PROBING_MARGIN_RIGHT 10\n#define PROBING_MARGIN_FRONT 10\n#define PROBING_MARGIN_BACK  10\n#define XY_PROBE_SPEED (200*60)  // X and Y axis travel speed (mm/min) between probes\n#define Z_PROBE_SPEED_FAST (4*60)  // Feedrate (mm/min) for the first approach when double-probing (MULTIPLE_PROBING == 2)\n#define Z_PROBE_SPEED_SLOW (Z_PROBE_SPEED_FAST / 2)  // Feedrate (mm/min) for the \"accurate\" probe of each point\n#define MULTIPLE_PROBING 2  //  A total of 2 does fast/slow probes with a weighted average.\n// Z probes require clearance when deploying, stowing, and moving between probe points to avoid hitting the bed and other hardware. Inductive probes need space to keep from triggering early.\n// Use these settings to specify the distance (mm) to raise the probe (or lower the bed). The values set here apply over and above any (negative) probe Z Offset set with NOZZLE_TO_PROBE_OFFSET, M851, or the LCD.\n// Only integer values &gt;= 1 are valid here. \n// Example: `M851 Z-5` with a CLEARANCE of 4  =&gt;  9mm from bed to nozzle.\n//     But: `M851 Z+1` with a CLEARANCE of 2  =&gt;  2mm from bed to nozzle.\n#define Z_CLEARANCE_DEPLOY_PROBE   10 // Z Clearance for Deploy/Stow\n#define Z_CLEARANCE_BETWEEN_PROBES  5 // Z Clearance between probe points\n#define Z_CLEARANCE_MULTI_PROBE     5 // Z Clearance between multiple probes\n#define Z_PROBE_LOW_POINT          -10 // Farthest distance below the trigger-point to go before stopping\n// For M851 give a range for adjusting the Z probe offset\n#define Z_PROBE_OFFSET_RANGE_MIN -10\n#define Z_PROBE_OFFSET_RANGE_MAX 10\n// Enable the M48 repeatability test to test probe accuracy\n#define Z_MIN_PROBE_REPEATABILITY_TEST\n--\n// @section extruder\n#define DISABLE_E false             // Disable the extruder when not stepping\n#define DISABLE_INACTIVE_EXTRUDER   // Keep only the active extruder enabled\n--\n// @section machine\n// Invert the stepper direction. Change (or reverse the motor connector) if an axis goes the wrong way.\n#define INVERT_X_DIR false\n#define INVERT_Y_DIR false\n#define INVERT_Z_DIR true\n--\n// @section extruder\n// For direct drive extruder v9 set to true, for geared extruder set to false.\n#define INVERT_E0_DIR true\n--\n// @section homing\n#define Z_HOMING_HEIGHT  10      // (mm) Minimal Z height before homing (G28) for Z clearance above the bed, clamps, ...\n// Direction of endstops when homing; 1=MAX, -1=MIN\n#define X_HOME_DIR -1\n#define Y_HOME_DIR -1\n#define Z_HOME_DIR -1\n--\n// @section machine\n// The size of the print bed\n#define X_BED_SIZE 220\n#define Y_BED_SIZE 220\n// Travel limits (mm) after homing, corresponding to endstop positions.\n#define X_MIN_POS -8\n#define Y_MIN_POS -17.5\n#define Z_MIN_POS -10\n#define X_MAX_POS (X_BED_SIZE + 4)\n#define Y_MAX_POS (Y_BED_SIZE + 2)\n#define Z_MAX_POS 250\n--\nFilament rounout sensor\n#define FILAMENT_RUNOUT_SENSOR\n  #define FIL_SENSOR_OPTIONAL        true\n  #define FIL_RUNOUT_ENABLED_DEFAULT true // Enable the sensor on startup. Override with M412 followed by M500.\n  #define NUM_RUNOUT_SENSORS   1          // Number of sensors, up to one per extruder. Define a FIL_RUNOUT#_PIN for each.\n  #define FIL_RUNOUT_STATE     LOW        // Pin state indicating that filament is NOT present.\n  #define FIL_RUNOUT_PULLUP               // Use internal pullup for filament runout pins.\n#define FILAMENT_RUNOUT_SCRIPT \"M600\" // Set one or more commands to execute on filament runout. (After 'M412 H' Marlin will ask the host to handle the process.)\n--\nBed Leveling\n#define AUTO_BED_LEVELING_BILINEAR  // Probe several points in a grid. You specify the rectangle and the density of sample points. The result is a mesh, best for large or uneven beds.\n#define ENABLE_LEVELING_AFTER_G28  // Normally G28 leaves leveling disabled on completion. Enable one of these options to restore the prior leveling state or to always enable leveling immediately after G28.\n#define PREHEAT_BEFORE_LEVELING  // Auto-leveling needs preheating\n  #define LEVELING_NOZZLE_TEMP 120  // (\u00b0C) Only applies to E0 at this time; Nozzle temp 120\u00b0C\n  #define LEVELING_BED_TEMP     60  // Bed temp 60\u00b0C\n#define DEBUG_LEVELING_FEATURE  //  Enable detailed logging of G28, G29, M48, etc.; Turn on with the command 'M111 S32'.; NOTE: Requires a lot of PROGMEM!\n#define ENABLE_LEVELING_FADE_HEIGHT  // Gradually reduce leveling correction until a set height is reached, at which point movement will be level to the machine's XY plane. The height can be set with M420 Z&lt;height&gt;\n  #define DEFAULT_LEVELING_FADE_HEIGHT 0.0 // (mm) Default fade height.\n\nNote: G26 Mesh Valifation Pattern tool is DEactivated! : //#define G26_MESH_VALIDATION\n\n#define GRID_MAX_POINTS_X 5  // Set the number of grid points per dimension.\n#define GRID_MAX_POINTS_Y GRID_MAX_POINTS_X\n--\nHoming\n// Manually set the home position. Leave these undefined for automatic settings.\n#define MANUAL_X_HOME_POS X_MIN_POS\n#define MANUAL_Y_HOME_POS Y_MIN_POS\n#define MANUAL_Z_HOME_POS 0\n--\nEEPROM\n// Persistent storage to preserve configurable settings across reboots.\n// M500 - Store settings to EEPROM.\n// M501 - Read settings from EEPROM. (i.e., Throw away unsaved changes)\n// M502 - Revert settings to \"factory\" defaults. (Follow with M500 to init the EEPROM.)\n#define EEPROM_SETTINGS  // Persistent storage with M500 and M501\n#define EEPROM_CHITCHAT  // Give feedback on EEPROM commands. Disable to save PROGMEM.\n#define EEPROM_BOOT_SILENT  // Keep M503 quiet and only give errors during first load\n#define EEPROM_AUTO_INIT  // Init EEPROM automatically on any errors.\n--\nTemperature - Preheat Constants\n#define PREHEAT_1_LABEL       \"PLA\"\n#define PREHEAT_1_TEMP_HOTEND 190\n#define PREHEAT_1_TEMP_BED     60\n#define PREHEAT_1_FAN_SPEED     0 // Value from 0 to 255\n\n#define PREHEAT_2_LABEL       \"ABS\"\n#define PREHEAT_2_TEMP_HOTEND 240\n#define PREHEAT_2_TEMP_BED    110\n#define PREHEAT_2_FAN_SPEED     0 // Value from 0 to 255\n--\nNozzle Park \n// Park the nozzle at the given XYZ position on idle or G27. The \"P\" parameter controls the action applied to the Z axis:\n// P0  (Default) If Z is below park Z raise the nozzle.\n// P1  Raise the nozzle always to Z-park height.\n// P2  Raise the nozzle by Z-park amount, limited to Z_MAX_POS.\n\n#define NOZZLE_PARK_FEATURE\n\n#if ENABLED(NOZZLE_PARK_FEATURE)\n  // Specify a park position as { X, Y, Z_raise }\n  #define NOZZLE_PARK_POINT { (X_MIN_POS + 10), (Y_MAX_POS - 10), 10 }\n  #define NOZZLE_PARK_X_ONLY          // X move only is required to park\n  //#define NOZZLE_PARK_Y_ONLY          // Y move only is required to park\n  #define NOZZLE_PARK_Z_RAISE_MIN   2   // (mm) Always raise Z by at least this distance\n  #define NOZZLE_PARK_XY_FEEDRATE 100   // (mm/s) X and Y axes feedrate (also used for delta Z axis)\n  #define NOZZLE_PARK_Z_FEEDRATE    5   // (mm/s) Z axis feedrate (not used for delta printers)\n--\n/**\n * Print Job Timer\n *\n * Automatically start and stop the print job timer on M104/M109/M190.\n *\n *   M104 (hotend, no wait) - high temp = none,        low temp = stop timer\n *   M109 (hotend, wait)    - high temp = start timer, low temp = stop timer\n *   M190 (bed, wait)       - high temp = start timer, low temp = none\n *\n * The timer can also be controlled with the following commands:\n *\n *   M75 - Start the print job timer\n *   M76 - Pause the print job timer\n *   M77 - Stop the print job timer\n */\n#define PRINTJOB_TIMER_AUTOSTART\n--\nLANGUAGE of the UI\n#define LCD_LANGUAGE zh_CN  // Chinese (Simplified)\n#define LCD_LANGUAGE_AUTO_SAVE \n#define LCD_LANGUAGE_2 en  // English\n--\nENCODER SETTINGS\n#define ENCODER_PULSES_PER_STEP 4  // This option overrides the default number of encoder pulses needed to produce one step. Should be increased for high-resolution encoders.\n#define ENCODER_STEPS_PER_MENU_ITEM 1  // Use this option to override the number of step signals required to move between next/prev menu items.\n--\nDISPLAY\n#define TFT_GENERIC  // Generic TFT with detailed options\n#define TFT_DRIVER ST7796\n#define TFT_INTERFACE_SPI  // Interface.\n#define TFT_RES_320x240  // TFT Resolution.\n#define TFT_COLOR_UI  // Marlin Default Menus, Touch Friendly, using full TFT capabilities\n</code></pre> Most important (imho) settings for NEO from Configuration_adv.h (v1.3.3)<pre><code>Thermal Protection / Thermal Runaway -&gt; Hotend:\n#define THERMAL_PROTECTION_PERIOD 35         // Seconds\n#define THERMAL_PROTECTION_HYSTERESIS 10     // Degrees Celsius\n#define ADAPTIVE_FAN_SLOWING              // Slow part cooling fan if temperature drops\n#define ADVANCED_PAUSE_FEATURE\n\nThermal Protection / Thermal Runaway -&gt; Bed:\n#define THERMAL_PROTECTION_BED_PERIOD        20 // Seconds\n#define THERMAL_PROTECTION_BED_HYSTERESIS     2 // Degrees Celsius\nManual Feedrates &amp; Smallest Z-Move using the Control Panel\n#define MANUAL_FEEDRATE { 50*60, 50*60, 4*60, 2*60 } // (mm/min) Feedrates for manual moves along X, Y, Z, E from panel\n#define FINE_MANUAL_MOVE 0.025 // (mm) Smallest manual Z move (&lt; 0.1mm)\n\nPower Loss Recovery:\n#define PLR_ENABLED_DEFAULT   true // Power Loss Recovery enabled by default. (Set with 'M413 Sn' &amp; M500)\n#define POWER_LOSS_MIN_Z_CHANGE 0.05 // (mm) Minimum Z change before saving power-loss data\n\nBabystepping (only activated for Z-Axis!):\n#define BABYSTEP_INVERT_Z false           // Change if Z babysteps should go the other way\n#define BABYSTEP_MILLIMETER_UNITS         // Specify BABYSTEP_MULTIPLICATOR_(XY|Z) in mm instead of micro-steps\n#define BABYSTEP_MULTIPLICATOR_Z  0.02f    // (steps or mm) Steps or millimeter distance for each Z babystep\n#define BABYSTEP_MULTIPLICATOR_XY 1       // (steps or mm) Steps or millimeter distance for each XY babystep\n\nLinear Advance is NOT Activated:\n//#define LIN_ADVANCE\n\nAdvanced Pause (Experimental feature for filament change support and for parking the nozzle when paused):\n#define ADVANCED_PAUSE_FEATURE\n  #define PAUSE_PARK_RETRACT_FEEDRATE         60  // (mm/s) Initial retract feedrate.\n  #define PAUSE_PARK_RETRACT_LENGTH           20  // (mm) Initial retract.\n                                                  // This short retract is done immediately, before parking the nozzle.\n  #define FILAMENT_CHANGE_UNLOAD_FEEDRATE     10  // (mm/s) Unload filament feedrate. This can be pretty fast.\n  #define FILAMENT_CHANGE_UNLOAD_ACCEL        25  // (mm/s^2) Lower acceleration may allow a faster feedrate.\n  #define FILAMENT_CHANGE_UNLOAD_LENGTH      100  // (mm) The length of filament for a complete unload.\n                                                  //   For Bowden, the full length of the tube and nozzle.\n                                                  //   For direct drive, the full length of the nozzle.\n                                                  //   Set to 0 for manual unloading.\n  #define FILAMENT_CHANGE_SLOW_LOAD_FEEDRATE   6  // (mm/s) Slow move when starting load.\n  #define FILAMENT_CHANGE_SLOW_LOAD_LENGTH     0  // (mm) Slow length, to allow time to insert material.\n                                                  // 0 to disable start loading and skip to fast load only\n  #define FILAMENT_CHANGE_FAST_LOAD_FEEDRATE   6  // (mm/s) Load filament feedrate. This can be pretty fast.\n  #define FILAMENT_CHANGE_FAST_LOAD_ACCEL     25  // (mm/s^2) Lower acceleration may allow a faster feedrate.\n  #define FILAMENT_CHANGE_FAST_LOAD_LENGTH     0  // (mm) Load length of filament, from extruder gear to nozzle.\n                                                  //   For Bowden, the full length of the tube and nozzle.\n                                                  //   For direct drive, the full length of the nozzle.\n  //#define ADVANCED_PAUSE_CONTINUOUS_PURGE       // Purge continuously up to the purge length until interrupted.\n  #define ADVANCED_PAUSE_PURGE_FEEDRATE        3  // (mm/s) Extrude feedrate (after loading). Should be slower than load feedrate.\n  #define ADVANCED_PAUSE_PURGE_LENGTH         50  // (mm) Length to extrude after loading.\n                                                  //   Set to 0 for manual extrusion.\n                                                  //   Filament can be extruded repeatedly from the Filament Change menu\n                                                  //   until extrusion is consistent, and to purge old filament.\n  #define ADVANCED_PAUSE_RESUME_PRIME          0  // (mm) Extra distance to prime nozzle after returning from park.\n  //#define ADVANCED_PAUSE_FANS_PAUSE             // Turn off print-cooling fans while the machine is paused.\n\n                                                  // Filament Unload does a Retract, Delay, and Purge first:\n  #define FILAMENT_UNLOAD_PURGE_RETRACT       13  // (mm) Unload initial retract length.\n  #define FILAMENT_UNLOAD_PURGE_DELAY       5000  // (ms) Delay for the filament to cool after retract.\n  #define FILAMENT_UNLOAD_PURGE_LENGTH         8  // (mm) An unretract is done, then this length is purged.\n  #define FILAMENT_UNLOAD_PURGE_FEEDRATE      25  // (mm/s) feedrate to purge before unload\n\n  #define PAUSE_PARK_NOZZLE_TIMEOUT           45  // (seconds) Time limit before the nozzle is turned off for safety.\n  #define FILAMENT_CHANGE_ALERT_BEEPS         10  // Number of alert beeps to play when a response is needed.\n  #define PAUSE_PARK_NO_STEPPER_TIMEOUT           // Enable for XYZ steppers to stay powered on during filament change.\n\n  #define PARK_HEAD_ON_PAUSE                      // Park the nozzle during pause and filament change.\n</code></pre>"},{"location":"firmware/fw_marlin/#known-restrictions","title":"Known Restrictions","text":"<p>In case you didn't want to look into the belonging config-files or the above 'summary' yourself, let me point out the (imho) most important restrictions that apply to each model.  </p>"},{"location":"firmware/fw_marlin/#go_1","title":"Go","text":""},{"location":"firmware/fw_marlin/#speed-restrictions","title":"Speed Restrictions","text":"<p>Warning</p> <p>In the following I'll list the default values for certain settings. Some of them you probably have to adjust (like the e-steps \"E0 = 390 steps/mm)\"), some of them you can adjust (like the maximum feed rates). However, adjusting the steps fo your specific printer might be safe and necessary as it's part of the calibration process you need to do anyway. Adjusting the speed settings though might not be safe - even though it seems to make sense to probably set the feed rate for the extruder to a higher value then 25mm/s as it affects the retraction. So if you decide to change these settings, only do it in small increments and be aware of the fact that it might harm your printer!  </p> <p>The default settings for X, Y, Z, E0 are:</p> <p>Default Axis Steps Per Unit (steps/mm): 80, 80, 400, 103 -&gt; you can override them with <code>M92</code></p> Info <p>During the calibration of your printer it might be necessary to adjust these settings. At my Neo for example the steps for the axes did fit, but I had to increase the steps for the extruder (E0). </p> <p>Default Max Feed Rate (mm/s): 300, 300, 4, 25 -&gt; you can override them with <code>M203</code> </p> Info <p>You can see that the maximum feed rate for the extruder E0 is set to 25mm/s. That means that this is the limit for the retraction speed also! So in case you were trying to find the optimum retraction speed and therefore printing retraction towers and wondered why there wasn't any real difference between e.g. 30mm/s, 40mm/s and 50mm/s, the reason is simple - they just didn't apply! Yes, you've read correct: the retraction speed you set at your slicer got ignored in case it was higher than 25mm/s, because 25mm/s is the limit which is set in the firmware. Kinda 'sweet', isn't it? I know what you're thinking right now, I thought the same.. ;) So in case you want or need to set this value higher (do at your own rsik though!), see the expandable box below.  </p> Setting a Higher Maximum Value for Retraction Speed <p>If you want to set a higher maximum value for the retraction speed, you can do it as in the following description (do at your own risk though!). - Open OctoPrint or whichever program you use to get access to a terminal for sending G-codes directly to the printer.  - Type in <code>M503</code> to get a report of the settings. If you scroll up at the beginning of the output, you'll see these lines: <code>`   Recv: echo:; Maximum feedrates (units/s):   Recv: echo:  M203 X300.00 Y300.00 Z4.00 E25.00</code>    -&gt; E25.00 is the maximum retraction speed possible. Anything above it coming from the slicer as a command is being ignored, anything lower will be taken into account (as these are the limits). - Now type in e.g. <code>M203 E50</code> to set the new limit to 50mm/s (choose this value wisely and use small increments to go higher). - After doing so, type <code>M500</code> to store the new value in the EEPROM. - To check if everything got applied and saved now, you can either query <code>M501</code> or switch off the printer, switch it on again and check the settings with <code>M503</code> again - the abovementioned line should be changed to this now: <pre><code>Recv: echo:; Maximum feedrates (units/s):\nRecv: echo:  M203 X300.00 Y300.00 Z4.00 E50.00\n</code></pre>   Now you can start trying to find the best retraction speed that may be above 25mm/s by printing retraction towers. </p> <p>Default Max Acceleration (change/s) change = mm/s (Maximum start speed for accelerated moves): 500, 500, 100, 1000 -&gt; you can override them with <code>M201</code></p> <p>The default acceleration settings (change/s) change = mm/s are: - X, Y, Z and E acceleration for printing moves: 500 -&gt; you can override them with <code>M204 P</code> - E acceleration for retracts: 500 -&gt; you can override that with <code>M204 R</code> - X, Y, Z acceleration for travel (non printing) moves: 1000 -&gt; you can override that with <code>M204 T</code> </p>"},{"location":"firmware/fw_marlin/#linear-advance","title":"Linear Advance","text":"<p>The useful function \"Linear Advance\" is NOT activated! This seems to be due to the fact that (afaik) there's some kind of problem with Marlin firmware versions before v2.1 and TMC2208 stepper drivers. </p>"},{"location":"firmware/fw_marlin/#babystepping-z-axis","title":"Babystepping Z-Axis","text":"<p>As we can see from above, the babysteps for manual controling the z-axis using the control unit are 0.025mm. That means that e.g. if we want to set the offset using the control unit, each step will be displayed as 0.02mm but in fact it is 0.025mm! Means, that e.g. you lower the z-axis or the z-axis offset two steps, it will be displayed as 0.04mm but in fact it will be 0.05mm. This might not appear important at first sight, but as that sums up the higher the value becomes which you set using the control unit, the higher the deviation will be.  </p> <p>I personally had the problem with my Neo (before I made a new limit switch which fits my offset in the home position) that I had to enter a pretty negative high value for my z-offset. I set the offset at the control unit to -5.6mm - it seemed to work. Then everything was kinda crazy and didn't work out at the second print, so I set this value using the G-code command directly. Suddenly it didn't fit anymore at all. I had no clue what was going on there and whatever I tried, nothing gave me reliable and repeatable results. At the end I made a shorter piece of metal for triggering the limit switch later and therefore getting the nozzle closer to the bed. But when I found out that the display just shows 0.02mm steps while in fact 0.025mm steps were executed, the weird behaviour mentioned before somehow did made sense..</p>"},{"location":"firmware/fw_marlin/#neo_1","title":"Neo","text":""},{"location":"firmware/fw_marlin/#speed-restrictions_1","title":"Speed Restrictions","text":"<p>Warning</p> <p>In the following I'll list the default values for certain settings. Some of them you probably have to adjust (like the e-steps \"E0 = 390 steps/mm)\"), some of them you can adjust (like the maximum feed rates). However, adjusting the steps fo your specific printer might be safe and necessary as it's part of the calibration process you need to do anyway. Adjusting the speed settings though might not be safe - even though it seems to make sense to probably set the feed rate for the extruder to a higher value then 25mm/s as it affects the retraction. So if you decide to change these settings, only do it in small increments and be aware of the fact that it might harm your printer!  </p> <p>The default settings for X, Y, Z, E0 are:</p> <p>Default Axis Steps Per Unit (steps/mm): 80, 80, 400, 390 -&gt; you can override them with <code>M92</code> </p> Info <p>During the calibration of your printer it might be necessary to adjust these settings. At my Neo for example the steps for the axes did fit, but I had to increase the steps for the extruder (E0).  </p> <p>Default Max Feed Rate (mm/s): 300, 300, 4, 25 -&gt; you can override them with <code>M203</code> </p> Info <p>You can see that the maximum feed rate for the extruder E0 is set to 25mm/s. That means that this is the limit for the retraction speed also! So in case you were trying to find the optimum retraction speed and therefore printing retraction towers and wondered why there wasn't any real difference between e.g. 30mm/s, 40mm/s and 50mm/s, the reason is simple - they just didn't apply! Yes, you've read correct: the retraction speed you set at your slicer got ignored in case it was higher than 25mm/s, because 25mm/s is the limit which is set in the firmware. Kinda 'sweet', isn't it? I know what you're thinking right now, I thought the same.. ;) So in case you want or need to set this value higher (do at your own rsik though!), see the expandable box below.  </p> Setting a Higher Maximum Value for Retraction Speed <p>If you want to set a higher maximum value for the retraction speed, you can do it as in the following description (do at your own risk though!). - Open OctoPrint or whichever program you use to get access to a terminal for sending G-codes directly to the printer.  - Type in <code>M503</code> to get a report of the settings. If you scroll up at the beginning of the output, you'll see these lines: <code>`   Recv: echo:; Maximum feedrates (units/s):   Recv: echo:  M203 X300.00 Y300.00 Z4.00 E25.00</code>    -&gt; E25.00 is the maximum retraction speed possible. Anything above it coming from the slicer as a command is being ignored, anything lower will be taken into account (as these are the limits). - Now type in e.g. <code>M203 E50</code> to set the new limit to 50mm/s (choose this value wisely and use small increments to go higher). - After doing so, type <code>M500</code> to store the new value in the EEPROM. - To check if everything got applied and saved now, you can either query <code>M501</code> or switch off the printer, switch it on again and check the settings with <code>M503</code> again - the abovementioned line should be changed to this now: <pre><code>Recv: echo:; Maximum feedrates (units/s):\nRecv: echo:  M203 X300.00 Y300.00 Z4.00 E50.00\n</code></pre>   Now you can start trying to find the best retraction speed that may be above 25mm/s by printing retraction towers. </p> <p>Default Max Acceleration (change/s) change = mm/s (Maximum start speed for accelerated moves): 500, 500, 100, 500 -&gt; you can override them with <code>M201</code></p> <p>The default acceleration settings (change/s) change = mm/s are: - X, Y, Z and E acceleration for printing moves: 500 -&gt; you can override them with <code>M204 P</code> - E acceleration for retracts: 500 -&gt; you can override that with <code>M204 R</code> - X, Y, Z acceleration for travel (non printing) moves: 1000 -&gt; you can override that with <code>M204 T</code> </p>"},{"location":"firmware/fw_marlin/#linear-advance_1","title":"Linear Advance","text":"<p>The useful function \"Linear Advance\" is NOT activated! This seems to be due to the fact that (afaik) there's some kind of problem with Marlin firmware versions before v2.1 and TMC2208 stepper drivers.    </p>"},{"location":"firmware/fw_marlin/#babystepping-z-axis_1","title":"Babystepping Z-Axis","text":"<p>As we can see from above, the babysteps for manual controling the z-axis using the control unit are 0.025mm. That means that e.g. if we want to set the offset using the control unit, each step will be displayed as 0.02mm but in fact it is 0.025mm! Means, that e.g. you lower the z-axis or the z-axis offset two steps, it will be displayed as 0.04mm but in fact it will be 0.05mm. This might not appear important at first sight, but as that sums up the higher the value becomes which you set using the control unit, the higher the deviation will be.  </p> <p>I personally had the problem with my Neo (before I made a new limit switch which fits my offset in the home position) that I had to enter a pretty negative high value for my z-offset. I set the offset at the control unit to -5.6mm - it seemed to work. Then everything was kinda crazy and didn't work out at the second print, so I set this value using the G-code command directly. Suddenly it didn't fit anymore at all. I had no clue what was going on there and whatever I tried, nothing gave me reliable and repeatable results. At the end I made a shorter piece of metal for triggering the limit switch later and therefore getting the nozzle closer to the bed. But when I found out that the display just shows 0.02mm steps while in fact 0.025mm steps were executed, the weird behaviour mentioned before somehow did made sense..</p>"},{"location":"firmware/fw_marlin/#mods","title":"Mods","text":"<p>There are a few compiled versions and also mods of the original firmwares available out there. Please let me know if you find more so that I can link to them. </p> <p>Warning</p> <p>Use at your own risk!  </p>"},{"location":"firmware/fw_marlin/#go_2","title":"Go","text":"<ul> <li>@Auburn offers a modified Kobra Go firmware </li> </ul>"},{"location":"firmware/fw_marlin/#neo_2","title":"Neo","text":"<ul> <li>@cringegnere offers his compiled version of the the original Kobra Neo firmware</li> <li>@sjorge offers a modified Kobra Neo firmware</li> </ul>"},{"location":"hardware/axes/","title":"Axes","text":""},{"location":"hardware/axes/#axes","title":"Axes","text":""},{"location":"hardware/axes/#x-axis","title":"X-Axis","text":"<p>The X-axis of both the Go and the Neo is belt driven (6mm wide), the motor which drives the belt (6mm wide) is located at the left side.  You can adjust the tension of the belt by using the knob at the right side of the aluminum profile where the printhead is guided onto.  </p> <p></p>"},{"location":"hardware/axes/#belt-tension","title":"Belt Tension","text":"<p>It's kinda difficult to explain the correct belt tension, so you'd have to experiment a bit with that. Generally speaking, the belt shouldn't be too tightened up and shouldn't be too loose either. If it's too tight, too much pressure will be put onto the motor shaft - if it's too loose though, the belt might slip. If you can 'bend' the belt down a bit by putting a some pressure with your finger onto it but you still feel an amount of resistance, then it's a good sign that you're in the right area of tension. If you pluck it like a guitar string then it should make something like a mid to high sound.  </p> Belt Maintenance <ul> <li>Check the belt tension from time to time as it might wear out and lengthen a bit. </li> <li>Check the teeth of the belt if they are still good looking or if they're worn out or if even some teethe are missing.</li> <li>Check if you can see any cracks at the belt. </li> <li>Check the gear wheels of the motors which are driving the belts. Are they also looking ok? Did they become loose on the motor shaft somehow?  </li> </ul>"},{"location":"hardware/axes/#v-slot-wheels-position","title":"V-Slot Wheels Position","text":"<p>The wheels are leading the printhead onto the aluminum profile of the x-axis. They are mounted onto a metal plate where the printhead itself is mounted onto. The wheels run in the V-slot of the profile and therefore they should sit in a good position.   You can adjust the roller tension by turning the eccentric nut which moves the wheels either towards or away from the aluminum profile. </p> Adjusting the Position of the V-Slot Wheels <ul> <li>The wheels shouldn't sit too tight in the V-slot but also not too loose. They should touch the aluminum profile and sit in there pretty tight, but they should be able to roll and move freely - so they shouldn't sit too tight though (sorry, it's kinda hard to explain). On the other hand, they also shouldn't be too loose or far away from the profile which would lead to instability. The printhead shouldn't wiggle but it has to be able to move freely.   </li> </ul> V-Slot Wheels Maintenance <ul> <li>As the wheels will suffer from running on the aluminum and debris can build up, clean the aluminum and the wheels itself from time to time. </li> <li>After that, add some sythetic grease onto the aluminum profile where the wheels are running to reduce friction. </li> <li>Make sure you're not using WD-40 or grease which has graphite or MoS2 added! </li> <li>If you see debris building up pretty quick, it's most likely because the wheels are too close to the aluminum and therefore it's too much friction which leads to a quick wearout. So make sure the wheels are touching the aluminum but they shouldn't be too tight.</li> </ul> <p>Don't Use WD-40 for Lubrication</p> <p>Do yourself a favour and never use WD-40 for lubrication as it's not a lubricant and will harm your POM wheels by time! People use to think WD-40 is the perfect solution for pretty much everything, but they aren't aware of the fact that -due to the chemical recipe it's made of- it's absolutely not sufficient for getting parts lubed mid- to longterm. Fact is, that the chemicals inside of it will even wash off any grease or oil, it can harm POM and rubber and so on. As an example: So let's say you want to lubricate your bike chain and use WD-40 to do so, you'll basically wash away the existent lubrification  which is inside the chain - therefore the chain will be worn out pretty quick. You'll also harm the sealings. If you don't believe me, make a little test by yourself: take an air baloon, pump it up, spray WD-40 onto it and wait..   </p>"},{"location":"hardware/axes/#y-axis","title":"Y-Axis","text":"<p>The Y-axis of both the Go and the Neo is belt driven (6mm wide). You can adjust the tension of the belt by using the knob at the front side of the aluminum profile where the bed is guided onto. The x-shaped plate for the bedmount itself has v-slot wheels which are running in the v-slot of the aluminum profile. The following picture shows the aluminum profile of the y-axis with the knob for adjusting the belt tension at the front.   </p> <p></p> <p>The motor which drives the belt is positioned at the back of the printer.  </p> <p></p>"},{"location":"hardware/axes/#belt-tension_1","title":"Belt Tension","text":"<p>It's kinda difficult to explain the correct belt tension, so you'd have to experiment a bit with that. Generally speaking, the belt shouldn't be too tightened up and shouldn't be too loose either. If it's too tight, too much pressure will be put onto the motor shaft - if it's too loose though, the belt might slip. If you can 'bend' the belt down a bit by putting some pressure with your finger onto it but you still feel an amount of resistance, then it's a good sign that you're in the right area of tension. If you pluck it like a guitar string then it should make something like a mid to high sound.   </p> Belt Maintenance <ul> <li>Check the belt tension from time to time as it might wear out and lengthen a bit. </li> <li>Check the teeth of the belt if they are still good looking or if they're worn out or if even some teethe are missing.</li> <li>Check if you can see any cracks at the belt. </li> <li>Check the gear wheels of the motors which are driving the belts. Are they also looking ok? Did they become loose on the motor shaft somehow?      </li> </ul>"},{"location":"hardware/axes/#v-slot-wheels-position_1","title":"V-Slot Wheels Position","text":"<p>The wheels are leading the bed onto the aluminum profile in the middle. They run in the V-slot of the long profile in the middle underneath the bed and therefore they should sit in a good position. Means, they shouldn't sit too tight in the V-slot but also not too loose - they should be able to roll and move freely, but they shouldn't be too far away from the profile which would lead to instability. You can adjust the roller tension by turning the eccentric nut which moves the wheels either towards or away from the aluminum profile. Not all of the wheels have eccentric nuts though as you might be able to see at the following picture.  </p> <p></p> Check the Screws of the Bedplate and the Gantry of the Bed <ul> <li>Check if the screws are all tightened up. Be careful though to not overtighten the screws of the Bedplate as you would compress the little spacers underneath it and therefore the plate may become warped. On the other hand, if you see that your bed is warped somehow or that the bed is much more off in certain areas or at one side, you can check if the screws in that area might be too tightened up.  </li> <li>Check if the bedplate itself is somehow wobbling. Not only sideways/horizontally, but also up and down/vertically. If so, not only check the v-slot wheels and maybe adjust their fitting using the eccentric nuts, also check if the screws of the gantry of the bed where the wheels are mounted to are tightened up. As an example: at my Neo the bed was wobbling up and down in one certain area - after checking the screws and tighten them up everything was sturdy as it should be.         </li> </ul> V-Slot Wheels Maintenance <ul> <li>As the wheels will suffer from running on the aluminum and debris can build up, clean the aluminum and the wheels itself from time to time. </li> <li>After that, add some sythetic grease onto the aluminum profile where the wheels are running to reduce friction. </li> <li>Make sure you're not using WD-40 or grease which has graphite or MoS2 added! </li> <li>If you see debris building up pretty quick, it's most likely because the wheels are too close to the aluminum and therefore it's too much friction which leads to a quick wearout. So make sure the wheels are touching the aluminum but they shouldn't be too tight.</li> </ul> <p>Don't Use WD-40 for Lubrication</p> <p>Do yourself a favour and never use WD-40 for lubrication as it's not a lubricant and will harm your POM wheels by time! People use to think WD-40 is the perfect solution for pretty much everything, but they aren't aware of the fact that -due to the chemical recipe it's made of- it's absolutely not sufficient for getting parts lubed mid- to longterm. Fact is, that the chemicals inside of it will even wash off any grease or oil, it can harm POM and rubber and so on. As an example: So let's say you want to lubricate your bike chain and use WD-40 to do so, you'll basically wash away the existent lubrification  which is inside the chain - therefore the chain will be worn out pretty quick. You'll also harm the sealings. If you don't believe me, make a little test by yourself: take an air baloon, pump it up, spray WD-40 onto it and wait..    </p>"},{"location":"hardware/axes/#z-axis","title":"Z-Axis","text":"<p>The Z-axis of both the Go and the Neo is driven by a single lead screw. The lead screw has 8mm in diameter with 8mm lead ('distance' of one complete rotation) and 2mm pitch and has a length of 350mm (it's actually this kind of lead screw which is used pretty much everywhere in these kind of machines). This rod is mounted to the 5mm shaft of the motor by a coupler at the bottom. The top end of the rod is completely unguided, in between it's guided and secured by a POM anti-backlash nut which you can see at the following picture, it's the black plastic part mounted to the black steel bracket.  </p> <p></p> Lead Screw Maintenance <ul> <li>Make sure the coupler is mounted correctly and the screws are tightened. Check from time to time that the coupler didn't come loose somehow. </li> <li>Make sure the rod is clean, there shouldn't stick debris or dirt on it as it could/would block the movement. </li> <li>If you need to clean it, it's advisable to disassamble the whole rod system including the coupler and the anti-backlash nut. A detailed instruction with images about how to do so will come soon. </li> <li>Spray e.g. WD-40 on the rod to loosen old sticky oil and debris. Then take a toothbrush or something like that for being able to reach the bottom of the thread also and clean it up. Make sure to not leave any particles from the anti-backlash nut or any dirt stuck on it. </li> <li>After this procedure, clean the WD-40 off of the rod by using e.g. car break cleaner or silicone remover spray. It'll wash off everything, you can also use an old cloth to wipe it (but make sure that no textile fibres will stick in the thread somehow). </li> <li>After you cleaned and dried it, inspect it! Are there any dents in the thread or any kind of deformation that shouldn't be there? If so, it would be best to get a new lead screw and replace it.   </li> <li>If everything is fine though and you want to mount the lead screw to the printer again, add a little lube to the rod. Don't be excessive here and drown it with oil - just use a tiny bit to make it glide better. Don't use WD-40 or grease which contains graphite or MoS2!  I personally like to use PTFE spray first, let it dry and then put some synthetic lube on which is made for mountainbike chains as it uses to stick a bit better onto the metal. But every good medium to heavy synthetic machine oil will do the job just fine. You can draw a line of oil all along one side of the rod from the bottom to the top and then put the rod between your fingers and turn it. By doing so, the excessive oil will build up at your fingers and will also reach the bottom of the rod. Wipe off any excessive amount of oil afterwards again - you don't want to have oil dripping down on your motor later! Tip: to avoid dripping oil down to the motor, I personally wrap a pipe cleaner around the rod right above the coupler. If by time a drop or two will move down, the pipe cleaner will absorb it.     </li> <li>Before installing the rod into the coupler of the motor again, clean the last inch of the bottom again by using the car break cleaner and the cloth. Try to get it as much degreased as possible, so that it doesn't start to slip inside of the coupler later. </li> <li>When you're done reassembling everything and you home the printhead, you only should hear the low noise of the turning motor now - so now grinding noise from the anti-backlash nut or something like that.  </li> </ul> <p>Don't Use WD-40 for Lubrication</p> <p>Do yourself a favour and never use WD-40 for lubrication as it's not a lubricant! It's perfectly fine for washing off old oil from the threaded rod, but it's not a sufficient lubrification! People use to think WD-40 is the perfect solution for pretty much everything, but they aren't aware of the fact that -due to the chemical recipe it's made of- it's absolutely not sufficient for getting parts lubed mid- to longterm. Fact is, that the chemicals inside of it will even wash off any grease or oil, it can harm POM and rubber and so on. As an example: So let's say you want to lubricate your bike chain and use WD-40 to do so, you'll basically wash away the existent lubrification  which is inside the chain - therefore the chain will be worn out pretty quick. You'll also harm the sealings. If you don't believe me, make a little test by yourself: take an air baloon, pump it up, spray WD-40 onto it and wait..  </p> Changing the Coupler <p>It might be a good idea to change the coupler as the one which comes with the printer doesn't compensate any misalignement of the motor shaft and the lead screw. So if they aren't in a perfect vertical alignment, it will result in shear forces, increased wear of the anti-backlash nut and even may cause jamming. If you want to change the coupler, you'll need to get a coupler which suits \u215dmm as the motor shaft is 5mm and the rod is 8mm in diameter. Make sure you don't get a coupler which uses a grub screw that holds onto the shaft and rod itself, you need to get a coupler which uses some kind of a clamp mechanism so to say as the stock one. The reason is simple: the motor shaft is round, it doesn't have a flat area where a grub screw needs to be screwn onto. Same goes for the lead screw itself. (Pictures are about to come soon.)  </p> Changing the Anti-Backlash Nut <p>If the anti-backlash nut that came with the printer is worn out, you don't necessarily have to buy the original spare part. Actually I personally would refuse to so so anyway because I personally don't really like the material of it and prefer brass nuts. Just make sure you get the right size and check the top of the nut which is mounted to the holder to make sure you'll get the right ones. (Pictures are about to come soon.) When you (re-)install the anti-backlash nut (whichever you get), make sure that you press both parts together when putting the lead screw in. There's a little spring between the upper and the lower part of the nut which is there to prevent the backlash. This spring needs to be pushed together during the installation, so that there's tension and both parts of that nut system are being pushed away from each other when installed.  </p>"},{"location":"hardware/axes/#v-slot-wheels-position_2","title":"V-Slot Wheels Position","text":"<p>The wheels are leading the x-axis gantry along the z-axis aluminum profile. They run in the V-slot of the z-axis profiles and therefore they should sit in a good position. Means, they shouldn't sit too tight in the V-slot but also not too loose - they should be able to roll and move freely, but they shouldn't be too far away from the profile which would lead to instability. You can adjust the roller tension by turning the eccentric nut of the wheel which moves the wheels either towards or away from the aluminum profile. Not all of the wheels have eccentric nuts though as the following picture shows, only the two wheels (one at each side) which are facing the inner side (towards the bed) do have an eccentric nut.  </p> <p></p> <p></p> Adjusting the Wheels: Special 'Trick' <p>However, you might face the problem that you just can't get all of the three wheels at each side to touch the aluminum frame as they should. So if you need to adjust the position of the wheels using the eccentric nuts, you might encouter the problem that e.g. the inner wheel and the lower wheel on the outside may sit in the v-slot really nice, but that the third wheel (the upper one on the outside in this example) isn't even touching the aluminum and can be spinned in the air. Whatever you'll try with the eccentric nut of the wheel of the inside (because there's only this one), you won't be able to achieve that all of the three wheels touch the aluminum and sit in the slot like they should. So - what to do? Well, there's a trick: you have to loosen the two hexagon socket screws which are holding the Y-shaped metal plate (where the wheels are mounted onto, at the backside so to say) against the aluminum frame of the x-axis gantry. Dont take them out (!), just loosen them a bit. Then you can adjust the position of the wheels by using the eccentric nut again because now the metal plate can move a bit and you can adjust it's position towards the aluminum frame of the x-axis gantry. It's even better to drive up the x-axis gantry all the way to the top first and secure it with some zipties or velcros. Then lower the gantry again until the weight is held by the zipties (make sure the distance between the x-axis and the upper plastic x-frame is pretty much the same though, so that the gantry is horizontally leveled). By doing so you'll take off the weight from the wheels and it'll be easier to adjust their position. After you're done with adjusting the position of the wheels, tighten up the screws of those metal plates again, drive up the gantry a bit again until the zipties are hanging around freely and then cut them off. (Pictures are about to come soon.) </p> V-Slot Wheels Maintenance <ul> <li>As the wheels will suffer from running on the aluminum and debris can build up, clean the aluminum and the wheels itself from time to time. </li> <li>After that, add some sythetic grease onto the aluminum profile where the wheels are running to reduce friction. </li> <li>Make sure you're not using WD-40 or grease which has graphite or MoS2 added! </li> <li>If you see debris building up pretty quick, it's most likely because the wheels are too close to the aluminum and therefore it's too much friction which leads to a quick wearout. So make sure the wheels are touching the aluminum but they shouldn't be too tight.</li> </ul> <p>Don't Use WD-40 for Lubrication</p> <p>Do yourself a favour and don't use WD-40 for lubrication as it's not a lubricant and will harm your POM wheels by time! People use to think WD-40 is the perfect solution for pretty much everything, but they aren't aware of the fact that -due to the chemical recipe it's made of- it's absolutely not sufficient for getting parts lubed mid- to longterm. Fact is, that the chemicals inside of it will even wash off any grease or oil, it can harm POM and rubber and so on. As an example: So let's say you want to lubricate your bike chain and use WD-40 to do so, you'll basically wash away the existent lubrification  which is inside the chain - therefore the chain will be worn out pretty quick. You'll also harm the sealings. If you don't believe me, make a little test by yourself: take an air baloon, pump it up, spray WD-40 onto it and wait.. </p>"},{"location":"hardware/axes/#endstop-switches","title":"Endstop Switches","text":"<p>The endstop switches are triggered when either axis reaches its limits. So if you notice that e.g. the motor of the y axis doesn't stop when the bed reaches the end then you should check if the belonging switch is faulty. </p> Checking the Switches <p>You can check if the switch really isn't working by triggering it manually while e.g. the bed is moving. If the bed doesn't stop, turn off your printer. Check the connectors at the switch and the mainboard if they're still in place. If everything looks fine here, then it's most likey that the switch itself is faulty. So disassamble the switch from the frame and put in a new one. Wire everything up again and try again triggering it manually if it works now.   </p>"},{"location":"hardware/axes/#mods","title":"Mods","text":"<p>The following mods should fit both the Go and the Neo due to the mostly identical design of the printer itself. So I'm just listing them without any distinction.  </p> <ul> <li> <p>Some users stabilize the rod of the Z-axis by adding a top holder/aligner with a ball bearing in the center which sits on top of the lead screw and mount the holder to the gantry to eliminate wobbling of the lead screw. For doing so, you could print a construction and add a ball bearing, there are different STL files available for this solution.   However, as much as it seems useful at first sight, I personally assume that it might be better if the top of the lead screw can move freely to avoid putting extra pressure on the lead screw, the frame and associated parts. If the guidance at the top doesn't allow at least minimal movement, then this could result in shear forces and even in bending the lead screw itself which would cause jamming.   </p> </li> <li> <p>Reddit member DrumsticknDrumstick upgraded the z-axis of his Neo to a dual drive, the solution fits both the Go and the Neo: Kobra neo/go dual Z mod   However, as much as I personally appreciate this mod and like this idea in general, I'm not sure if it really is a good idea as both motors and rods have to work absolutely simulataneously. I once tried a similar mod with my cheap little CNC machine and problems occured as soon as the movement wasn't absolutely identical anymore. However, looking at it at a 3D printer compared to a CNC of similar building architecture, I might be wrong with my concerns as there isn't any pressure applied to the printhead from the bottom side like it is when a router of a CNC machine hits the surface and cuts out material.      </p> </li> </ul>"},{"location":"hardware/bed/","title":"Bed","text":""},{"location":"hardware/bed/#bed","title":"Bed","text":"<p>Both of the printers have a heated and magnetic bed with the dimensions of 220x220mm. It should reach about \u2264230\u00b0F/110\u00b0C maximum and therefore it should be possible to successfully print ABS, PETG and TPU (by using a housing though) besides PLA. Both printers offer a 25-point automatic bed leveling which is called \"Anycubic LeviQ\".  </p> Bed Leveling Function <ul> <li>Don't get misleaded by the term \"automatic bed leveling\" - the process does not level your bed! It only measures and recognizes the distance towards the sensor at the 25 spots where it measures. You can not level the bed itself without tinkering as it's mounted directly to the construction which leads the bed in the y-axis.    </li> <li>When it comes to executing the ABL function of the printer, it's advisable to initially check if the ABL sensor is leveled correctly to get the best results out of the ABL process. See the expandable box \"Leveling the ABL Sensor\" in the section \"Leveling or Dismounting the ABL Sensor\" in the chapter \"Printhead\".  </li> <li>To make the measured values of the ABL come into account later when it comes down to printing, you'll need to add a certain line to the start G-code of the slicer. I'm not 100% sure yet, but right now it seems like the necessary command is \"M420 S1 L\" which reads the data out of the EEPROM.   </li> </ul> <p>The bed uses a removable PEI-coated spring steel plate which makes it easy to remove the printed object. The plate that comes with the printer is one-sided coated at the Go and double-sided coated at the Neo.  The following picture shows the surface of the coated plate from a close-up view.  </p> <p> </p> <p>When you look at the backside of the bed, you'll notice a black plastic cap which sticks out.  </p> <p></p> <p>Be careful to never break it by accident as it protects the wires which are soldered to the contacts of the board at the bottom side.  </p> <p></p> <p>When you take a look underneath the bed itself, you'll spot a little foam piece secured by kapton tape - don't remove that as it protects and insulates the thermistor of the bed which is positioned underneath it.  </p> <p></p> Bed Thermistor <p>As you can already conclude from looking at the picture, you can't change the thermistor of the bed as it's built into it - at least right now it appears to me like that. I might be wrong though as it might be just soldered to some contacts - to investigate that, I'd need to take off the foam piece which I refused to do so because I don't have any kapton tape yet.  </p> Execute PID Tuning for the Bed <p>To make sure the heating algorithm can work as expected and keeps the fluctuation of the temperature as low as possible, execute a PID tuning. You can find informations about how to do that in the chapter \"PID Tuning\".  </p> Clean the Plate of the Bed <ul> <li>Before starting a print, make sure the surface of the plate is clean and without any traces of oil, silicone or other stuff which avoids that the filament sticks to the surface. To clean it, use isopropyl alcohol.  </li> <li>Already touching the plate with your fingers leads to a little amoung of grease left there which already might be enough to cause problems for your print to stick on the bed, so maybe always use disposable gloves when touching it, taking it off or repositioning it.</li> <li>If there's a rest of filament stuck on the plate, never try to scratch it off with metal or other sharp materials as you don't want to harm the PEI coating. Heat up the bed and try to peel off the filament instead. If that doesn't work, take off the plate and heat up the area using your hot air gun - sooner or later you'll be able to peel it off. However, be careful to not overheat and maybe harm the coating though.  </li> </ul> Level the ABL Sensor <p>It's advisable to level the ABL sensor initially, you can find informations about it in the hardware section within the chapter \"Printhead\".  </p> Bed Level Visualization <p>The display of the control unit does not show a meshview after you proceeded the bed level function - if you'd like to see that, you'd usually have to use additional software like the beforementioned Octoprint and an additional plugin for visualization like the Bed Level Visualizer. To get a visualization out of the data, you need to add some code though, otherwise you won't get that nice graphic you can always see everywhere. So I don't know if the following code is 100% correct or if there's anything obsolete in there or whatever, but at least I got the visualization done at the end (Thanks to reddit member one-without-zero for pointing out M503 to me!).  </p> <ul> <li>Tab \"Collection\": <pre><code>M140 S60 ; starting by heating the bed for nominal mesh accuracy \nM117 Homing all axes ; send message to printer display \nG28 ; home all axes \nM420 S0 ; Turning off bed leveling while probing, if firmware is set ; to restore after G28 \nM104 S0 ;Turn-off hotend \nM117 Heating the bed ; send message to printer display \nM190 S60 ; waiting until the bed is fully warmed up \nM300 S1000 P500 ; chirp to indicate bed mesh levels is initializing \nM117 Creating the bed mesh levels ; send message to printer display \nM155 S30 ; reduce temperature reporting rate to reduce output pollution\n@BEDLEVELVISUALIZER ; tell the plugin to watch for reported mesh \nG29 T ; run bilinear probing \nM155 S3 ; reset temperature reporting \nM140 S0 ; cooling down the bed \nM104 S0 ; cooling down extruder\nM500 ; store mesh in EEPROM \nM503 ; report mesh values\nM300 S440 P200 ; make calibration completed tones \nM300 S660 P250 M300 S880 P300 \nM117 Bed mesh levels completed ; send message to printer display\n</code></pre></li> <li> <p>Tab \"Commands\", click the \"+ Add\" button. There you create two new command scripts: \"Create mesh\" and \"Pull latest mesh\" (you can name them however you like though).     \"Create mesh\" has the same code like at the \"Collection\" tab above (to be honest: I actually think this one is obsolete but because now it's working for me here and I don't want to mess around, I'll just add it here to show you my solution): <pre><code>M140 S60 ; starting by heating the bed for nominal mesh accuracy \nM117 Homing all axes ; send message to printer display \nG28 ; home all axes \nM420 S0 ; Turning off bed leveling while probing, if firmware is set ; to restore after G28 \nM104 S0 ;Turn-off hotend \nM117 Heating the bed ; send message to printer display \nM190 S60 ; waiting until the bed is fully warmed up \nM300 S1000 P500 ; chirp to indicate bed mesh levels is initializing \nM117 Creating the bed mesh levels ; send message to printer display \nM155 S30 ; reduce temperature reporting rate to reduce output pollution\n@BEDLEVELVISUALIZER ; tell the plugin to watch for reported mesh \nG29 T ; run bilinear probing \nM155 S3 ; reset temperature reporting \nM140 S0 ; cooling down the bed \nM104 S0 ; cooling down extruder\nM500 ; store mesh in EEPROM \nM503 ; report mesh values\nM300 S440 P200 ; make calibration completed tones \nM300 S660 P250 M300 S880 P300 \nM117 Bed mesh levels completed ; send message to printer display\n</code></pre></p> <p>\"Pull latest mesh\" has the following code: <pre><code>@BEDLEVELVISUALIZER\nM420 T0\nM420 V\n</code></pre></p> </li> <li> <p>To creat a msehview now, click on the blue info-button \"Update Mesh Now\". This will start the probing. After it's done, click on \"Pull latest mesh\" and the graphic should be rendered.  </p> </li> <li>To see a table with the collected data, click on the little configuration wheel again and then click on the tab \"Data\".  </li> <li>Images will come soon.. ;)</li> </ul> Spacers of the Bedmount <p>If you find that the bed is not as flat or trimmed as it should be, it might be a good idea to disassemble it and check the four black spacers that connect the metal frame and the bed itself. Measure them with a slide gauge to see if they are really the same height! If they're not, either look for other spacers you might be using, put the stock ones on a flat surface with sandpaper and grind them down to one length or put washers or other suitable material of the needed thickness under them. Then execute another ABL using the \"Bed Level Visualizer\" plugin with OctoPrint to see the new values. From there you can try to get it as much trimmed as possible.  </p> <p>Just to give you an impression - the four spacers at my Neo had the following lenghts: 17.78mm, 17.88mm, 17.97mm, 18.11mm. Also the cut ends weren't perpendicular to the axes of those spacers. So it's not surprising that I was facing an unleveled bed - even if we'd assume that the gantry itself is completely flat (which I doubt, I did measured it with a spirit level and it seemed to be quite okay, but I didn't disassemble it because I didn't want to deal with the crimped belts) - it's just impossible to get a leveled bed plate with four spacers of different lengths. I searched my drawers and finally found four 'spacers' made of some kind of plastic as well (probably ABS). They were a bit bigger in the diameter and the length, but at least they seemed to be a bit more equal in the length: 19.88mm (shortest) to 19.90mm (longest) - so I gave them a try. Turned out that it got better, but I still had a deviation of more than 1mm to the right side with the worst value at the right hand corner at the back. So I added some gasked material (the sheets where you can cut out your own gaskets for engines and gearboxes and so on) of approximately the necessary thickness and now it's leveled pretty well. i still do have a deviation from the outside to the insoide though, but that might be due to a warped bed in general and can't be solved by myself. So I'll stick with that for now and try to let the firmware do the math of those ABL values to compensate it during printing.  </p> Check the Screws of the Bedplate and the Gantry of the Bed <ul> <li>Check if the screws are all tightened up. Be careful though to not overtighten the screws of the Bedplate as you would compress the little spacers underneath it and therefore the plate may become warped. On the other hand, if you see that your bed is warped somehow or that the bed is much more off in certain areas or at one side, you can check if the screws in that area might be too tightened up.  </li> <li>Check if the bedplate itself is somehow wobbling. Not only sideways/horizontally, but also up and down/vertically. If so, not only check the v-slot wheels and maybe adjust their fitting using the eccentric nuts, also check if the screws of the gantry of the bed where the wheels are mounted to are tightened up. As an example: at my Neo the bed was wobbling up and down in one certain area - after checking the screws and tighten them up everything was sturdy as it should be.     </li> </ul>"},{"location":"hardware/bed/#mods","title":"Mods","text":"<p>Because you can't level the bed itself due to the construction, some people dismounted the four spacers and replaced them with springs and knobs which allows them to adjust the position of the bed itself. You can look out for a set of springs and knobs suitable for an Ender 3 for example, that should fit. It might be a good idea, especially if you find the bed itself completey unleveled which you should be able to see using the mesh visualization by e.g. using the OctoPrint plugin Bed Level Visualizer.     </p> Leveling the Bed Itself <p>However, if you are trying this solution, make sure you get yourself strong springs (so that the bed won't become wobbly) and make sure the knobs won't turn themselves loose by the vibration. When you want to level the bed then by adjusting the tension of the spring to pull down a side or an edge of the bed, be careful to not bend the bed itself by tightening up just one corner too much. Try to push down one side of the bed and adjust two springs at a time. even then be careful though and keep an eye on the mesh visualizer!  </p>"},{"location":"hardware/control_panel/","title":"Control Panel","text":""},{"location":"hardware/control_panel/#control-panel","title":"Control Panel","text":"<p>Both printers come with the same control panel. It's a 2.4\" LCD screen with a control knob at the right side next to it. There is no additional microSD card slot located at this panel. The following picture shows the main screen after you turn on the printer.  </p> <p></p> <p>The control panel allows you to control the printer manually, so you don't necessarily need an additional computer connected to the printer running e.g. Octoprint (even though it's advisable to do so). You can e.g. initiate the bed leveling process, heat up the extruder, load and unload filament, adjust your z-offset or home one or all axes. The usage is pretty easy and self-explaining - you turn the knob to the desired icon of the menu or function and press it to enter the menu or initiate the function. You can also upload gcode files directly onto your microSD card and start printing them by choosing the file using the control knob. Besides that, you can also pause or stop a printing process. See your manual for further informations of the possible actions you can take.  </p> <p>It also displays status informations like the current temperatures and the temperatures that should be reached due to a certain function or during the printing process (see picture above). </p> Bed Level Visualization <p>The display does not show a meshview after you proceeded the bed level function - if you'd like to see that, you'd usually have to use additional software like the beforementioned Octoprint and an additional plugin for visualization like the Bed Level Visualizer. However, it seems that the stock firmware doesn't support that, but I'm not 100% sure about it yet..  </p>"},{"location":"hardware/control_panel/#error-messages","title":"Error Messages","text":"<p>The display also displays error messages if any severe errors occur. As an example, it showed \"thermal runaway\" as my friend was struggeling with the printer and as the silicone sock started to fall of, because it seems that the heater block got cooled and therefore the measured temperature dropped below an expected value (that's just a guess though, I'm still not 100% sure about it).  </p> <p>When I was trying to get the printer up and running, at one point the display showed the following error message: </p> <p>I wasn't able to bypass that message in any way - it just stayed onto the screen and never disappeared. I couldn't find a \"reset button\" on the mainboard and had no clue what was going on.  After searching the web for solutions and trying different suggestions like unplugging the thermistor of the extruder and switching it off and on again to reset the message, I started to inspect the mainboard with a magnifying glass. This is what I spotted: </p> <p>I still have no clue how this actually happened, but it must have been caused by a shortcut either of the cartridge heater and/or the thermistor of the extruder. However, this little melted fella named \"D4\" caused the error message - after I installed a new thermistor and cartridge heater and swapped out the broken mainboard to replace it with a new one, everything was fine again. So if you ever face an error message which just stays on the screen whatever steps you took - maybe grab a magnifying glass and take a closer look, it might be worth it..  </p> <p>If I'll come across further error messages and know the solution for that, I'll post it here.</p>"},{"location":"hardware/filament_sensor/","title":"Filament Sensor","text":""},{"location":"hardware/filament_sensor/#filament-sensor","title":"Filament Sensor","text":"<p>The filament runout or break detection sensor available from Anycubic is optional, it doesn't come with the printer right away. It seems to be pretty much plug&amp;play as it should come with the specific wires and plugs. After stripping in the wires and lead them down to the mainboard, you then have to plug it in the corresponding socket which (up to me) should be this green one in the following picture as it's the only one available. </p> <p>I'm not sure yet if you have to activate something after installing it or if it just works right away though. However, after you connected and mounted the sensor, you lead the filament through it. If the filament runs out because it broke or the spool is empty, the printer will pause.  </p> Info <p>After doing some research I personally came to the conclusion that (at this time) I'm not going to get this sensor because I've read too many posts from different users complaining about false detections and therefore paused prints even though there was filament loaded. This might just be a small problem which probably could easily be fixed by bending the little lever of the switch inside of the sensorbox so that there's more pressure onto the filament, but right now I don't feel to go that route. However, if you got yourself the sensor and installed it or even opened the little plastic box and looked inside of it, I'd be happy if you'd get in touch with me (email: <code>3dneo (at) quantentunnel.de</code>) so that I could add some pictures of it here and a little description about how to activate it if certain steps would be necessary to do so.  </p>"},{"location":"hardware/hw_index/","title":"Hardware","text":""},{"location":"hardware/hw_index/#hardware","title":"Hardware","text":"<p>This section covers the hardware topics like the mainboard, the printhead and so on. You'll find pictures and notes about the parts, how to disassamble or maintenace them and sometimes also suggestions for spare parts which could be used. Just click on the belonging chapter of the part where the desired part is located at, so e.g. in case you're looking for informations about the hotend, see the chapter \"Printhead\".  </p> <p>If I found mods which seem meaningful to me and which fit in the certain area where the part is located at the printer, I'll list them at the end of the belonging chapter (like e.g. a link to an STL file of an upgraded fan duct can be found in the chapter \"Printhead\" and so on). Mods or STL files which don't fit in a special 'area' of the printer I made a chapter about can be found in the chapter \"Other\" (like e.g. raisers for the whole printer to stand higher).  </p> <p>Because you're entering the hardware part right now, there is something I really want to recommend to you and I cannot emphasize it enough:  before you even start printing anything, check the construction first. Check all screws, bolts, belts, wheels, electrical connectors - really just everything. And (really important): also disassemble the lead screw system, clean it and lubricate it. </p> <p>You might think now \"Why the heck should I even waste my time with that - I assembled the Go by myself / I got the preassembled Neo and why should I even disassemble the lead screw system?!?\" - and I understand that. Sure, you want to dive right into the beautiful ocean of 3D printing. And you will. But as with jumping into the unknown ocean from a cliff high above, you need to assure that everything is safe. And in this case with your new 3D printer it's actually not only that. The point is: even if you got the preassembled Neo, not everything will be assembled and mounted correctly. Some bolts or screws might not be tight enough or might be overtightened. The wheels might be too loose or too tight, same with the belts. And about the lead screw: just touch it. Does it feel wetly and oily, or does it feel more sticky and resinous instead? I'd bet it's more the last. And especially this will lead to a pretty quick wear out (in this case of the anti-backlash nut) and weird artifacts on your prints (due to the inconsistent movement) which will drive you crazy after hours of calibration prints.  </p> <p>Seriously, I can't encourage you enough to do so. Not only will you get to know your printer better, it'll most likely save you headaches and many hours of fiddling around trying to find the perfect print settings - just to despair of weird artifacts showing up on prints just when you thought you found the perfect settings because they were caused by a sticky and partially clogged lead screw thread or so. So - lean back, read the specific chapters and then grab your tools. Sooner or later you'll have to tinker anyway and by doing it right at the beginning of your journey you'll most likely be able to fix any possible hardware problem that occurs by yourself. No need to call Anycubic's warranty service to ask for a spare hotend because your nozzle is clogged or whatever (yes, I know, but people really do that..). No weeks of waiting until the part finally arrives and you realize that somebody has to take care of the tinkering part also.  </p> <p>Get to know this little machine and give it some love, then it'll pay you back with reliability and beautiful prints.    </p> Got a Go? <p>As I only own a Neo, I'm still missing e.g. pictures of certain parts of the Go. So if you have a Go and would like to contribute in taking certain pictures and send them to me I'd highly appreciate it.  Just send me an email to  <code>3dneo (at) quantentunnel.de</code>  Thank you! </p>"},{"location":"hardware/mainboard/","title":"Mainboard","text":""},{"location":"hardware/mainboard/#mainboard","title":"Mainboard","text":""},{"location":"hardware/mainboard/#trigorilla-v_306-stock","title":"TriGorilla V_3.0.6 (Stock)","text":"<p>The stock mainboard of both the Go and the Neo is the \"TriGorilla V_3.0.6\", it's just flashed with the respective fimware of either model. </p> <p>Afaik it is a 32bit mainboard with a HC32F460 200MHz ARM Cortex-M4 with 192KB SRAM and 512KB Flash. The mainboard comes with TMC2208 silent stepper drivers soldered onto the board. It offers a microSD card reader and a USB-C connector.    </p> <p> </p> <p></p> Tip <ul> <li> <p>As both the Go and the Neo use the same mainboard, you can just get yourself the mainboard for the Go if you e.g. own a Neo and can't get a mainboard for it (at the time of writing this, Anycubic only offers the mainboard for the Go in their shop) or if you find a seller but he charges more for the Neo version. You just need to flash the specific firmware for the Neo before using the printer. </p> </li> <li> <p>It's advisable to cut off the soldered tips of the wires without a plug (power supply and heated bed) and add ferrules to them. When you are screwing down the soldered tip inside the clamp, it may get deformed a bit and in case the wire gets warm and the solder gets softer, the contact may become loose which could lead to malfunction or even cause fire in the last consequence. So it's always a good idea to just use proper ferrules.  </p> </li> <li> <p>Shortcuts coming from the cartridge heater for example can/will damage your mainboard, so be careful to never cause a shortcut somehow! A common misbehaviour is to clean the nozzle with a little brass brush during the print process or while everything is heating up. Also grabbing the heater block to e.g. change the nozzle while everything is heating up and electrical current is flowing is another common mistake. When using the pliers to hold the heater block, the tips of the pliers may touch the contacts of the wires at the cartridge heater and you cause a shortcut. As a result you can/will get blown up part at the mainboard like the melted part \"D4\" as shown in the picture below.  </p> </li> </ul>"},{"location":"hardware/mainboard/#skr3-mod","title":"SKR3 (Mod)","text":"Got a SKR3? <p>Did you already replace the stock mainboard with a BTT SKR3? If so, it would be great if you'd share your knowledge and contribute a little description and probably a picture of the built in board.  Just send me an email to  <code>3dneo (at) quantentunnel.de</code>  Thank you!</p>"},{"location":"hardware/other/","title":"Other","text":""},{"location":"hardware/other/#other","title":"Other","text":"<p>Here you can find whatever didn't seem to fit in one of the other chapters.  </p>"},{"location":"hardware/other/#mods","title":"Mods","text":"<p>In the following I'll list mods or STL files I found which could be interesting in general. Keep in mind that they mostly should fit for both printers in general due to the identical design and contruction itself, so (right now) I don't separate them into Go and Neo like usually.    </p> <ul> <li>Gregg Bennett created risers which slip on the feet of the printer to rise up the whole construction allowing a better airflow for the fans of the mainboard and the power supply unit.  </li> <li>Lohtex created bed spacers which could be used to replace the stock ones if they're completely different in their size. However, keep in mind though that also the bottomside of the bed will get warm and therefore the spacers might become deformed! Also keep in mind that prints aren't 100% correct in their dimensions, so that printing spacers won't be the final solution to get your bed leveled. I'd probably suggest to look out for manufactured spacers. </li> <li>Stellar5 created a purge/drip tray which can be mounted to the frame and prevents filament from falling underneath the printer while heating up in home position.</li> <li>ZAch Goldberg created a sidemount which can be mounted underneath the holder of the control unit and offers some mounting options for e.g. a Raspberry Pi.   </li> </ul>"},{"location":"hardware/powersupply/","title":"Power Supply Unit","text":""},{"location":"hardware/powersupply/#power-supply-unit","title":"Power Supply Unit","text":"<p>The printer comes with a 400W power supply unit which can take 110V and 230V as well. </p> <p>The powerswitch and the plug are located at the left hand corner in the back at the side of the frame. </p> <p>Danger</p> <p>Before plugging in the cable and switching on the printer, make sure that you set the little switch for choosing the voltage to the correct value! You can access it from the back of the printer and either set it to 110V or 230V - so make sure everything is set correctly first!  </p> <p>The housing of the power supply unit is mounted at the back of the base frame underneath the bed. You can spot it from the front when you move the bed completely to the back as the following picture shows. </p> <p>Note</p> <p>I'll add pictures of the housing form an underneath-point of view as well as I'll open the housing to provide pictures of it. At my Neo the fan is really loud as it seems to run on 100% as soon as I power up the printer. So I'll see if I'll get rid of the stock fan and replace it with a better one.   </p>"},{"location":"hardware/printhead/","title":"Printhead","text":""},{"location":"hardware/printhead/#printhead","title":"Printhead","text":"<p>The printheads of the Go and the Neo aren't identical because of the different type of extruder they're using:  </p> <ul> <li>the Go uses a bowden drive feeder/extruder while </li> <li>the Neo is using a direct drive feeder/extruder.   </li> </ul> <p>If you look at both printheads from the front and compare their size, you'll notice that the one of the Go is a bit smaller and more square than the wider and more rectangular shaped one of the Neo.  </p>"},{"location":"hardware/printhead/#go","title":"Go","text":"<p>The following picture shows a new printhead for the Go as it comes as a spare part.  </p> <p></p> <p>The following picture shows a close up view of the printhead of the Go from the front view. At the bottom you can see the nozzle in the center and the orange tip of the ABL sensor at the left side.  </p> <p> </p>"},{"location":"hardware/printhead/#neo","title":"Neo","text":"<p>The following picture shows a new printhead for the Neo as it comes as a spare part.  </p> <p></p> <p>The following picture shows a close up view of the printhead of the Neo from the front view. At the bottom you can see the blue silicone sock of the heater block with the nozzle in the center and the orange tip of the ABL sensor at the right side.  </p> <p> </p>"},{"location":"hardware/printhead/#abl-sensor","title":"ABL Sensor","text":"<p>Both printers come with a proximity sensor for automatic bed levelling (ABL) which is (afaik) the same model. The ABL sensor at the Go is mounted pretty much straight behind the heater block, where at the Neo it's located a few centimeters to the right side next to the heater block.  </p> Sensor Position <p>Most of the time users have to adjust the postion of the ABL sensor even when the printer is brandnew and came straight from the factory. Scroll further down below to the \"Disassemble\" section where I described the procedure to level it.   </p>"},{"location":"hardware/printhead/#go_1","title":"Go","text":"<p>The following picture shows the location of the ABL sensor at the printhead of the Go, looking at it from a bottom view angle - the ABL sensor is the part at the left side with the round orange tip.   </p> <p></p> <p>The ABL sensor itself is mounted in a plastic bracket which is the mounted to the metal backplate. You can adjust the height of the position by loosening the screw at the left side of the clamp which then allows you to move the sensor.  </p> <p></p>"},{"location":"hardware/printhead/#neo_1","title":"Neo","text":"<p>The following picture shows the location of the ABL sensor at the printhead of the Neo, looking at it from a bottom view angle - the ABL sensor is the part at the right side with the round orange tip.   </p> <p></p> <p>The ABL sensor itself is mounted in a plastic bracket which is the mounted to the metal backplate. You can adjust the height of the position by a little spring supported screw located at the top.  </p> <p></p>"},{"location":"hardware/printhead/#extruder-feeder","title":"Extruder / Feeder","text":"<p>The Go uses a bowden drive extruder/feeder, while the Neo is using a direct drive extruder/feeder. If you're about to buy one of either models and you're not sure which fits you better, always go for the direct drive and get yourself the Neo.</p>"},{"location":"hardware/printhead/#go_2","title":"Go","text":"Got a Go? <p>Do you own a Kobra Go and want to contribute? That would be great!  I'd need a picture of the bowden drive feeder, so people could see the difference between the Go and the Neo.  Just send me an email to  <code>3dneo (at) quantentunnel.de</code>  Thank you! </p>"},{"location":"hardware/printhead/#neo_2","title":"Neo","text":"<p>The following picture shows the extruder/feeder of the Neo with the mounted plastic cover of the printhead.  </p> <p></p> <p>At the top in front of the little hole where the filament is inserted you find a little lever for manual release of the tension while loading/unloading the filament. The screw in the front adjusts the pressure of the feeder gear which is brought onto the filament. The following picture shows the mechanism without the plastic cover.  </p> <p></p> <p>Warning</p> <p>Make sure that you set the retraction distance and speed to the correct values for a direct drive! In general, it's supposed to be something around 1mm distance and probabyl around 50mm speed. If you set the distance to a value which is too high (e.g. the default 6mm for the Go as a bowden drive), the melted filament might be pulled back too far and reaches the PTFE tube which might get clogged then. </p> Feeder Gear Pressure <p>When adjusting the pressure of the feeder gear, make sure you don't tighten it up too much as it could squeeze and deform the filament. On the other hand it shouldn't be too loose though as it should transport the filament reliably. If you hold the filament with two fingers applying just a little amount of pressure and the feeder still pulls it out of your fingers, then you should be good. You might want to try different settings of the tension though.    </p>"},{"location":"hardware/printhead/#hotend-heatbreak","title":"Hotend &amp; Heatbreak","text":""},{"location":"hardware/printhead/#go_3","title":"Go","text":"<p>The hotend of the Go is shown in the next pictures. In the second picture you can see the heatbreak screwed into the block but dismounted from the aluminum cooling element.  </p> <p> </p> <p></p>"},{"location":"hardware/printhead/#neo_3","title":"Neo","text":"<p>The hotend of the Neo is shown in the following picture. Note the shape of the heatbreak as it's plugged into the belonging hole at the printhead and secured by two screws. The outer diameter of the heatbreak is 7mm at the thick part (top and bottom), at the smaller part between it's 6mm. The inner diameter is about 4.2mm. The length measured from the top until the 'stop ring' before the thread is 15.5mm and the length in total is about 24.6mm. </p> <p> </p> <p>Additionally there is a little PTFE-tube inside of it, which is about 4cm long and 4mm thick with a 2mm hole inside of it to guide the 1.75mm filament.  </p> <p> </p> <p>Warning</p> <ul> <li>Too high temperatures may harm the PTFE tube - it may become deformed!   </li> <li>If you dismounted the hotend and you put it back into the printhead, make sure you check and adjust the position of the ABL sensor and your Z offset afterwards!  </li> <li>If you replaced your old hotend with a new one (regardless of whether you also replaced the thermistor and/or cartridge heater with a new one or keep using the existing ones), execute a PID tuning afterwards!</li> </ul> Can't Load New Filament?! <p>If you can't load new filament even though nothing seems to be sticking in there anymore, it's most likely that the little PTFE tube inside of the hotend is clogged. To clean or replace it you need to disassemble the hotend from the printhead. Scroll down to the \"Disassembling\" section to find a little guide about how to do that.   </p> Spare Part Hotend <ul> <li>If you need a new hotend because your heater block or the heatbreak needs to be changed, you can get yourself the spare part hotend for the regular Kobra. If you look at the picture of it and compare it with the ones I've shown above, you'll notice that the shape of the heatbreak is the same. So up to me it'll fit perfectly.   </li> <li>If the old thermistor and/or cartridge heater are still good and the wires aren't harmed, you don't have to fiddle around to use the new ones! Just take the existing ones out of the old heater block and install them in the new one.   </li> <li>Besides that, the hotend for the Kobra comes with a cartridge heater and a thermistor which are also compatible with the ones from the Go and Neo - at least from a technical side of view. So you'd have them as a spare part also.  However, the wires of these parts are way too short though, so you wont't be able to connect them directly! So in case you have to use them, you probably could either just cut the plug and the old part and solder the wires together or (if you have the tools for that) crimp the specific socket for the plug to the old wire to just connect them this way. Polarity doesn't seem to matter here, so just connect the wires.  </li> <li>Remember to execute a PID tuning after changing the thermistor and/or the cartridge heater! </li> <li>However, scroll down and check out the \"Disassembling\" section below to see how to dis- and reassemble it. Maybe you don't need new parts, so try to clean up everything first and reassemble it before ordering new parts right away.</li> </ul> Large Clump of Melted Filament Built Up <p>Sometimes it may happen that melted filament builds up on top of the heater block to a large clump. This actually happened to me the other day (sorry, I forgot to take a picture). The reason for that was that the heatbreak in the heater block became loose somehow and through the little gap it squeezed out. It also may be caused by bad and cheap parts where the thread isn't just as good as it should be. So if you encouter this problem, here is what I recommend to do (based on my experience with this dilemma).  </p> <ul> <li>Take off the plastic cover first to get better access to the whole area.  </li> <li>Heat up everthing - I did this by using the preherat function for PLA at the control unit.</li> <li>Once the filament starts to melt and gets soft, grab a wooden stick and take away as much as possible carefully. Don't use a screwdriver or something like that to do so as you might harm the wires and/or cause a shortcut at e.g. the contacts of the cartridge heater.  Be really careful when taking away the clumps to not harm or rip off any of the wires! You can also use a cloth to wipe off the melted filament from the heater block and so on, just make sure you don't burn yourself!  </li> <li>For the next steps you need to be a bit quick in proceeding them, so if this is the first time you're diassembling the hotend, take a look at the sections here at the page and read them first so you'll know where the screws are located and which steps you need to take. Then proceed with the following steps.</li> <li>So, once everything is as clean as possible, turn off the printer and loosen the grub screws inside the heater block to take out the thermistor and the cartridge heater. Give it a quick wipe with the cloth if they're covered by a lot of filament, too (but don't waste too much time here as the filament is becoming hard again now pretty quick!). </li> <li>Then take out the nozzle from the heater block and unscrew the heater block from the hotend. Pay attention if you can feel that the heatbreak was loose in the heater block to check if that was the reason for the filament being able to squeeze out and build up. </li> <li>Dismount the fan on the right side and loosen the two hexagon socket screws which are holding the heatbreak in place. If it doesn't fall out by itself, pull it out. Make sure the little PTFE tube also comes out, take it out of the heatbreak.  </li> <li>If you were using a cheap nozzle and have a spare one, just throw away the old one. If it's a good or your only nozzle, try to get it back to work again (I'm sure you'll be able to do so). </li> <li>Now put all the metal parts (heatbreak, heater block and probably the nozzle) in a glass with acetone. close the lid and let it sit there for about 24hrs. The acetone won't dissolve PLA filament or so automagically like it does with ABS, but it'll make it soft and easier to clean. </li> <li>In the meantime you can take care of the thermistor and the cartridge heater. Scratch off the hardened filament from the metal parts by using a cutter for example, but be really careful to not slip off and harm any wires! I personally didn't take care of the little clump at the part where ther wires are coming out of the metal part because I didn't wanted to risk harming the wires, so I just let it sit there.  </li> <li>When you're about to clean the meatal parts which soaked in the acetone, I'd recommend wearing disposable gloves as acteone isn't really healthy for your skin. So put on those gloves and start cleaning the parts by carefully scratching off the rest of the filament. Use a cutter, a brass brush etc., but always be careful to not really harm anything. Pay special attention to all the threads and the holes of the heater block where the thermistor and the cartridge heater will take place. If you don't get everything cleaned up at the first time, just put it back in the acetone, wait again and then repeat the cleaning steps. </li> <li>Once everything looks nice and clean, rinse off the acetone with clear water and let it dry. This is especially important for the inner side of the nozzle - you don't want to have acetone in there.  </li> <li>Then reassemble everything and put it back in place. Read the notes in the specific sections here about how to reassemble the specific parts and what to pay attention to.  </li> <li>At the end when everything is reassembled and you heated up the hotend to finally mount the nozzle and load the filament, extrude filament to see if everything is ok. </li> <li>If so (I hope it will be!), don't start printing right away - execute a PID tuning for the hotend first. </li> <li>Also check if you need to re-level the ABL sensor in relation to the nozzle due to a probably different position of the hotend now.  -Execute an ABL and take care of your Z-offset as it also might needs to be adjusted because of the same reason: most likely the position of your nozzle will be different due to a different position of the whole hotend.  </li> </ul>"},{"location":"hardware/printhead/#heater-block","title":"Heater Block","text":"<p>Both printers use an E3D V5 compatible heater block. Both the thermistor and the cartidge heater have to be plugged into the specific holes and should be fixed with at tiny grub screw (HEX 1.5).  </p> <p> </p> <p>Warning</p> <p>If you need to replace the thermistor and/or the cartridge heater, make sure you don't overtighten the screws as it could harm both the thermistor and the heater cartridge! Note the dent from the screw and the deformed thermistor due to an overtightened screw from the manufacturer at my Neo.  </p>"},{"location":"hardware/printhead/#silicone-sock","title":"Silicone Sock","text":"<p>The silicone sock isolates the heater block. Therefore it should stay in place and shouldn't come off, as it may cause the \"thermal runaway\" error. The sock which comes with the printhead isn't the best one to use (in my opinion) as it seems to come off pretty easily. There are compatible V5 silicone socks at the aftermarket which I personally use and which I can highly recommend. They have a bigger lip which slips over the heater block and covers a bigger area of the top than the one which comes with the printer. Therefore they stay in place much better when they heat up and become more flexible. The following pictures show the compatible one from the aftermarket on the left side and the stock sock on the right side.     </p> <p> </p> <p>Additionaly, they also cover and therefore isolate the base of the nozzle - something that the stock ones don't do at all.  </p> <p> </p> Tip <p>If you read the above and still don't know what you should look or search for, search for \"silicone sock V5\" for example as these socks are for a V5 heater block. You can get them pretty much everywhere, so if you use to shop at Amazon or ebay for example, you'll find many offers which are pretty much the same at the end.  Just make sure that you're not getting the ones for a V6 heater block! You can also diffenrentiate them by already looking at the shape: the wrong ones for the V6 are more flat on one side, the correct ones for the V5 are cubic, so they are shaped like a dice* as you can see at the pictures above.  </p>"},{"location":"hardware/printhead/#thermistor-cartridge-heater","title":"Thermistor &amp; Cartridge Heater","text":"<p>The thermistor which is used is a capsuled NTC 100k (probably \"3950\"). The diameter is 3mm, the length should be minimum 6mm as that is the depth of the hole in the heater block and the length of the wire is about 150cm. You should be able to use a compatible item from the aftermarket which fits a V5/V6 heater block, e.g. an ATC Semitec 104GT-2. The following picture shows the thermistor from the aftermarket I used and the specific plug which is necessary to fit in the belonging socket at the mainboard.  </p> <p> </p> <p>The cartidge heater which is used is a 24V 40W element. The diameter is 6mm, the length of the original part is about 18mm, the length of the wire is about 150cm. However, a cartridge heater from the aftermarket with a length of about 21mm is just fine, it just sticks out at both sides of the heater block at the end which shouldn't be a problem. It seems that it's is a typical dimension for V5/V6 heater blocks. The following picture shows the original part on the left side and a compatible part from the aftermarket I used at the right side.  </p> <p> </p> <p>The following picture shows the specific plug which is necessary to fit into the socket at the mainboard.  </p> <p></p> <p>Warning</p> <p>If you need to replace the thermistor and/or the cartridge heater, make sure you don't overtighten the screws as it could harm both the thermistor and the heater cartridge! Note the dent from the screw and the deformed thermistor due to an overtightened screw from the manufacturer at my Neo.  </p> General Tips <ul> <li> <p>If you need to install a new thermistor and/or cartridge heater, you have to unstrip the wires from the cable conduit. You can just unroll the conduit, pull out the wires from the old part while tugging in the wires of the new part. Be careful to not pull too hard to not harm any thin wires which might be wrapped around the wires of the old part.  </p> </li> <li> <p>When installing the parts at the heater block and putting back on the plastic cap of the printhead, I personally avoided to bend the thin wires as it was done within the original installation. I just guided the wires along outside the plastic cover. By doing so, you minimize the risk of getting a shortcut due to a harmed or melted wire isolation at the part where the wires are bent and twisted originally. The following picture shows my new installed thermistor and cartridge heater with the wires running outside of the plastic cap.  </p> </li> </ul> Execute PID Tuning <p>After successful installation of the new thermistor and/or cartridge heater, execute a PID tuning using e.g. Octoprint!  </p>"},{"location":"hardware/printhead/#nozzle","title":"Nozzle","text":"<p>Anycubic ships the printheads with a 0.4mm brass nozzle for 1.75mm filament. The nozzle is compatible with e.g. E3D V5/V6 nozzles as shown in the following picture.  </p> <p> </p> <p>Warning</p> <ul> <li>Be careful to NOT touch and harm the wires and contacts of the thermistor and the heating cartridge with at brass brush or the wrench!  You may either harm the insulation, break the wire or even cause a shortcut which can result in a broken mainboard once you powered the printer up again. </li> <li>If you want to change the nozzle (check out the expandable admonition below!) and need to grab the heater block with a wrench, make sure you really just grab the heater block and never get any wires up in between - preferably grab the heater block from that sides where the wires don't come out.   </li> <li>If you want to clean the nozzle using a brass brush for example, never do it when the printer is powered up and the heating process of the extruder is in progress to avoid causing a shortcut by touching the contacs with the brush.  </li> <li>Make sure you DON'T turn the heater block! In case you want to change the nozzle, you don't want to loosen the heater block from the hotend, so just hold the heater block in place without turning it.     </li> </ul> About Nozzles in General <ul> <li> <p>When it comes down to choose the right nozzle size, it all depends on what you want to print and how detailed it should be. The standard size of 0.4mm the printers come with is a good starting point.  However, you may find yourself in the situation that you want to print more detailed objects or objects which should be more sturdy or where it doesn't matter if the surface doesn't look as clean and flat as possible, so you probably should adjust the size and switch to a smaller oder bigger diameter like 0.2-0.3mm for detailed objects and 0.6mm for the 'rougher' prints.  Keep in mind though that the printing time usually increases by choosing a smaller diameter and it decreases when you're using a bigger diameter due to the smaller/larger layer height that is possible to print.  Search the web for more specific informations about finding and choosing the right nozzle size for your project. You may want to start with this Article from All3DP: The Best 3D Printer Nozzle Types, Sizes &amp; Materials. </p> </li> <li> <p>In case you're using Cura as a slicer, make sure you update to the current version v5.x (Note: It doesn't run at Ubuntu versions below 20.x though) as it uses the new Arachne engine and offers better quality as a result of that. In case you never heard of that, I recommend to watch the following videos from Thomas Sanladerer or read the articles at his page https://toms3d.org/ where he shows the result of using a 0.6mm nozzle with Cura v5.x comparing to a 0.4 nozzle using Cura 4.x (SPOILER: you barely can see a difference).  </p> <ul> <li>Video: 0.4mm nozzles just became obsolete Article: 0.4mm nozzles just became obsolete </li> <li>Video: Get the benefits of a 0.6mm nozzle with a 0.4? Article: Get the benefits of a 0.6mm nozzle with a 0.4? </li> </ul> </li> <li> <p>Do yourself a favour and don't buy those cheap brass nozzles where you'll get a dozen of them for a few bucks. It's just not worth it. Remember that the nozzle is pretty much the most crucial part when it comes down to printing and achieving good results, as it's the last link in the chain of the print process and puts out the filament - so go for a manufacturer who is known for quality nozzles.  </p> </li> <li> <p>I personally use the E3D V6 brass nozzles (0.6 mm right now) for printing PLA+. Yes, they are a bit more expensive than the super cheap ones, but it's still a good price and it's really worth it - they last longer, they're precisely made and you'll get much better results. As long as you don't want to print special abrasive filaments, you're always good with these standard E3D V6 brass nozzles.  </p> </li> <li> <p>If you want to print filaments that are more abrasive, you probably want to go with nozzles made from plated copper, stainless or hardened steel, ruby sapphire nozzles and so on. Check out the web for further and more specific informations about what to choose.      </p> </li> </ul>"},{"location":"hardware/printhead/#cleaning-the-nozzle","title":"Cleaning the Nozzle","text":"<p>If you need to clean the nozzle during the printing procedure to take off excessive amount of melted filament or if the nozzle is clogged, mind the warnings from above and check out the following steps in the expandable block below.  </p> <p>However, keep in mind that nozzles are consumables though, they won't last forever. So get yourself some good quality nozzles right away so that you can easily replace a nozzle which is too clogged or where the tip may already be harmed. A harmed tip may also cause artefacts like stringing for example, so also keep that in mind if you suddenly see yourself confronted with weird and unexplainable printing behavior (in terms of quality).  </p> Cleaning the Nozzle <ul> <li>For cleaning the nozzle and getting rid of excessive filament during the printing process or right before printing starts as the extruder is heating up, just use a long and thin wooden stick like a skewer. A wooden toothpick also works fine - just make sure you don't burn yourself as it may be a bit short.  </li> <li>Before and after each print I recommend to wipe away the melted filament at the nozzle with a paper towel or a cloth - but don't burn yourself! This procedure keeps the nozzle clean and the rest of the filament won't burn black onto the brass which makes it hard to remove later.   </li> <li>If the nozzle is already too smeared and has too much filament burnt onto the surface to be cleaned with a paper towel, you can use a small brass brush. Be careful though to not harm the tip of the nozzle by scrubbing too hard across it! Be careful to not touch any wires or contacts during brushing at it may cause a shortcut and blow off your mainboard! So I'd suggest you heat up the nozzle and then turn off the printer before starting to brush.  </li> <li>If the nozzle is clogged, using a needle with the correct diameter to stick it into the hot nozzle for cleaning it sometimes works. Just stick in in the heatened up nozzle and poke around. Be careful to not harm the tip of the nozzle though!  </li> <li>You can also use certain filament which is made for cleaning. You load it and let it run through. </li> <li>If the nozzle is clogged and therefore the cleaning filament can't run through, you could also try to do a \"cold pull\". To do so you load the cleaning filament and manually push it into a bit. Then let the nozzle cool down and rip out the filament. You may have to repeat this procedure a few times until the cleaning filament can run through again. However, be careful not to rip off the filament by doing the cold pull as you then definitely have to disassemble the hotend. </li> <li>If you still encounter problems with the flow of the filament though or if you even can't load new filament, most likely the little PTFE tube inside of the heatbreak is clogged. Scroll down to the \"Disassembling\" section where you'll find a little guide about how to get it out and clean it.  </li> <li>If you took out the nozzle from the heater block and can't get it clean, try to put in acetone and let it sit there - the longer the better (I'd say minimum 24hrs). This method works especially great with ABS as that just dissolves, but it also works at least a bit with other types of filament like PLA (although not as good as with ABS at all) and makes it a bit softer. Then you can try to poke the filament out. This also works with the heater block and the heatbreak if you want to clean them also. Make sure to rinse them with water before installing though.  </li> </ul>"},{"location":"hardware/printhead/#changing-the-nozzle","title":"Changing the Nozzle","text":"<p>If you need to change the nozzle, mind the warnings from above and check out the following steps in the expandable block below.</p> Changing the Nozzle <ul> <li>If you just want to change the nozzle, take off the silicone sock of the heater block, then heat up the extruder first about 5-10\u00b0C above your regular printing temperature and pull back the filament a bit once it's warm enough. </li> <li>Once the extruder heated up, let it sit at that temperature for about a minute or two to make sure that even the last amount of filament which might stick somewhere in the gaps or the thread is melted. </li> <li>Then turn off the printer and ideally unplug it from the power outlet. Don't fiddle around while it's turned on - in case you slip with the wrench and harm the wires you could create a shortcut which most likely will blow something up of your mainboard.  </li> <li>Then grab the heater block with a wrench to hold it in place and screw out the nozzle carefully. Use a sufficient tool like a wrench or a socket wrench for the nozzle - don't use a pair of pliers as it may/will round off the screw nut. </li> <li>Make sure you don't turn the heater block at all to not loosen it from the heat break! Just hold it in place.</li> <li>If the nozzle won't come loose, heat up the extruder again, raise the temperature a bit and let it sit longer to melt the filament in the gaps which seems to block. Before trying to unscrew the nozzle, switch off the printer again.  If that still doesn't work, you could take a piece of damp cloth and hold it against the nozzle (not the heater block, only the nozzle!) for a moment to cool it down. Due to the sudden decrease of temperature the metal of the nozzle will contract a tiny bit which may result in being able to unscrew it.  </li> <li>For installing the new nozzle, screw it in and turn it back about one rotation once you feel it hits the hotend. I personally do this after everything cooled down until it's safe to touch because then I can screw in the nozzle by hand and therefore I can feel right at the start if it doesn't sit correctly. </li> <li>Check if you didn't harm any wires! </li> <li>If everything is fine, power up the printer, heat up the extruder again and carefully tighten up the nozzle (don't overtighten it though). </li> <li> <p>Don't get irritated by the fact that there's a little gap between the head of the nozzle and the heater block - that's totally fine and it's supposed to be like that as the following picture shows.  </p> <p>Warning</p> <ul> <li>Never try to unscrew the nozzle from the heater block while the parts are cold!  Melted filament or some kind of screw lock glue will make it hard or even impossible to unscrew it and you risk to shear off the nozzle!  </li> <li>Make sure you're holding the heater block tight to avoid any movement and don't overtighten the nozzle! Reddit user I_Sells_Drugs was so kind to allow me to show pictures of his attempt to tighten up the nozzle even more as he got irritated by the little gap between the head of the nozzle and the heater block. He managed to shear off the heatbreak from the heater block as the following pictures show.  </li> </ul> </li> </ul>"},{"location":"hardware/printhead/#disassembling-the-printhead","title":"Disassembling the Printhead","text":"<p>Disassembling the printhead isn't really complicated. Just make sure you're careful and put the screws in a place and order that makes it easy for you to reassemble everything later. The following steps are just a rough guide through so that you know what you'll be confrontated with.   </p> <p>Warning</p> <ul> <li>If you need to disassemble the printhead for e.g. changing the hotend, unload the filament first! </li> <li>For changing the nozzle or disassembling the heatbreak from the heater block, you have to heat up the parts first!  The main reason for that is to melt the filament which most likely entered little gaps there. Usually it's said that it should be around 200\u00b0C but that's probably not sufficient because (in my opinion) it depends on the material of the filament. So my suggestion is to heat up the extruder about 5-10\u00b0C more than the temperature you're printing with, then you should be on the safe side.  So either do that using the pre-heat function of the printer or by using a sufficient heat gut. However - don't burn yourself by touching the hot metal parts!</li> <li>Before starting to tinker turn off the printer and unplug it from the power outlet!</li> <li>Use the sufficient tools!  So please don't try to loosen the nozzle with a pair of pliers for example, use e.g. a wrench for that.  I also strongly recommend to not use a pair of pliers for the heater block, also for that you should use a wrench (if you don't have one of that size, use an adjustable one). A wrench has a smooth surface and therefore won't scratch the surface or even put dents into the block.  </li> <li>Make sure you don't lose a screw and make sure you'll know where the screws belong later when you want to reassemble everything again.  You might will be able to remember the belonging screws and positions if your tinkering lasts only an hour, but if anything crosses your plan and therefore you have to pause tinkering, you maybe won't remember one week later. So maybe start sorting the screws and take notes where they belong and/or take pictures right away from the start.</li> <li>Be patient and careful. Generally speaking, if you unscrew something and it doesn't come off easy, don't start pulling too hard as you might have overseen a screw or clip, so better watch twice. </li> <li>Don't harm or rip off any wires as it may cause severe damage to your mainboard or might be complicated to fix later on.  </li> </ul>"},{"location":"hardware/printhead/#go_4","title":"Go","text":""},{"location":"hardware/printhead/#take-off-the-plastic-cover","title":"Take Off the Plastic Cover","text":"<p>Whatever you want to do, like if you want to change the hotend, the heater block, the heatbreak, a fan or even want to disassemble the whole feeder system, you have to remove the plastic cover of the printhead first. It's secured by two hexagon socket screws at the top of the metal back plate and a plastic clip at each side at the lower bottom. Be gentle and careful to not break one of the clips - the best way to get them out of their fittings is to gently push together the whole plastic cover at the bottom sides.   </p> <p>After the plastic cover is gone, you can see the fan and the fanduct inside the plastic cover, the proximity sensor at the left side, the aluminum cooling element of the hotend/heatbreak in the middle and the heater block down at the bottom.</p> <p> </p>"},{"location":"hardware/printhead/#disassembling-the-hotendheater-blockheatbreak","title":"Disassembling the Hotend/Heater Block/Heatbreak","text":"<p>If you need to take out the hotend from the printhead to change it, disassemble it or to take out the heatbreak to clean it, check out the following steps in the expandable box below.  </p> Disassembling the Hotend, Heater Block and/or Heatbreak <ul> <li>When you look at the hotend, you'll see two bigger hexagon socket screws at the top left and right corner of the cooling element and two tiny hexagon grub screws at the lower end.  </li> <li>Before you start to disassemble it though, take out the thermistor and the cartridge heater of the heater block first by loosening the two tiny grub screws.   Be careful to not rip any wires!  </li> <li>The two bigger screws at the top are holding the cooling element and therefore the whole hotend in place.  then unscrew the two bigger hexagon socket screws at the top of the cooling element and you can take the hotend away from the metal plate.  </li> <li>If you want to change the hotend, the heatbreak or the heater block now, unscrew the nut at the top of the cooling element where the long PTFE tube runs through that leads the filament. Then loosen the two tiny hex grub screws just a little bit until you can pull out the heatbreak from the cooling element.   For any further steps of disassembling (taking out the nozzle or the heatbreak from the heater block), heat up the metal parts by using a heat gun for example and then unscrew the heatbreak and/or from the heater block. Make sure to neither harm any parts while using the wrench nor yourself by accidentally touching the hot material.  </li> </ul> <p>Warning</p> <ul> <li>When moving or pulling out the hotend, be careful to not break any wires or rip them off from the sensor and heater cartridge - so better unscrew the tiny hex screws a bit and take out the thermistor and the heating cartridge first as mentioned above. </li> <li>Check the wires and contacts if they aren't harmed and if everything is ok. </li> <li>Never try to unscrew the heatbreak from the heater block while the parts are cold!  Melted filament or some kind of screw lock glue might make it hard or even impossible to unscrew it and you risk to shear off the heatbreak!  </li> </ul> <p>Danger</p> <p>If you can see bare wire shining through the isolation of the wires of either the thermistor or the cartridge heater I'd strongly recommend to replace the component to not risk a shortcut and therefore a broken mainboard (seriously - you don't want to get a blown off mainboard like it happened to me just because of a part which maybe costs a buck or two). </p>"},{"location":"hardware/printhead/#leveling-or-dismounting-the-abl-sensor","title":"Leveling or Dismounting the ABL Sensor","text":"<p>If you need to dismount the ABL sensor from the printhead to change it or if you need to level it, check out the following steps in the expandable box below. However, the ABL sensor should be leveled anyway, even if you got the printer brandnew from the manufacturer. After adjusting the height of it, determine your Z offset.  </p> <p>The following picture shows a sensor that should/has to be leveled (don't mind the tiny rest of filament at the tip of the nozzle which touches the paper instead of the nozzle itself though, I chipped it away before leveling everything).     </p> Leveling the ABL Sensor <ul> <li>For leveling the ABL sensor, you need to loosen the screw at the left side of the clamp that holds the sensor in place.  </li> <li>Further steps about how to level the sensor in relation to the nozzle will come soon.  </li> </ul> Dismounting the ABL Sensor <ul> <li>If you want to change the ABL sensor, you probably have to dismount the bracket/clamp that holds the sensor from the metal backplate. I'm not really sure about it as I didn't do it, but if the bracket is shaped like a U then that should be the way to go. Here you can see the two screws that hold it in place, looking at the metal plate from the back.  </li> <li>After reassembling the sensor, make sure to level it (see expandable box above).  </li> </ul>"},{"location":"hardware/printhead/#reassembling","title":"Reassembling","text":"<p>For reassembling, just proceed the steps you took to disassemble the part in reverse. However, you might also want to have a look at the general steps I mentioned in the expandable box below.  </p> <p>Warning</p> <ul> <li>If you dismounted the hotend and/or the ABL sensor, make sure to level the ABL sensor again and control your Z offset!</li> <li>If you replaced the hotend/heater block and/or changed the thermistor and/or the cartridge heater, execute a PID tuning!</li> </ul> Reassembling <p>For reassembling, just put everything back together by reverting the beforementioned steps. Make sure you're using the right screws and don't forget any of them. Don't overtighten the screws - as my father (R.I.P.) used to say: \"After tight comes loose!\" (roughly translated). </p> <ol> <li>Warm up the parts using e.g. a heat gun and screw the heatbreak into the heater block until it sits tight.  </li> <li>Put back the cleaned or renewed PTFE tube into the cooling element, let the tube stick out about 5cm, don tighten up the nut yet.  </li> <li>Then push the heatbreak back into the cooling element - make sure you push it deep enough until the little 'ring' of the heatbreak touches the cooling element. The PTFE tube should touch the bottom of the heatbreak - because you let it stick out more than necessary, it should therefore come up a bit out of the cooling element at the top.</li> <li>Watch out to put the hotend in place the right way: the 'bigger' part of the heater block should be located at the front. Everything should be aligned. </li> <li>Then tighten up the tiny grub screws to secure the heatbreak, so that the hotend doesn't turn or wiggle anymore (but don't overtighten the screws though). Tighten up the nut of the PTFE tube then.</li> <li>Mount the whole hotend/cooling element back on the metal plate by using the two bigger hexagon socket screws.  </li> <li>Put the thermistor and the heater cartridge back in place and secure them by carefully tighten the tiny hex screw - don't overtighten them as you could harm the thermistor and the heater cartridge! </li> <li>Reassemble the fan and the plastic cover.   </li> </ol>"},{"location":"hardware/printhead/#neo_4","title":"Neo","text":""},{"location":"hardware/printhead/#take-off-the-plastic-cover_1","title":"Take Off the Plastic Cover","text":"<p>Whatever you want to do, like if you want to change the hotend, the heater block, the heatbreak, a fan or even want to disassemble the whole feeder system, you have to remove the plastic cover of the printhead first. It's secured by two hexagon socket screws at the top of the metal back plate and a plastic clip at each side at the lower bottom as you can see at the following picture (well, you don't really see the plastic clip though but you can see the belonging notch of one of them). Be gentle and careful to not break one of the clips - the best way to get them out of their fittings is to gently push together the whole plastic cover at the bottom sides.  </p> <p> </p> <p>After the plastic cover is gone, you can see the fans, the proximity sensor at the right side and the heater block at center down at the bottom and so on. Depending on what you want do do now, you need to follow different steps. But first let's have a look at the coverless head from different points of view, starting with the view from the front with a straight look at the little fan for cooling the printed part.  </p> <p> </p> <p>Now we look at the left side where you can see the motor of the feeder gear. You can spot three hexagon socket screws there - two at the top and one at the bottom close to the motor housing, which are holding the entire feeder system onto the metal backplate.    </p> <p></p> <p>From the right side view you see the fan for cooling the extruder and the ABL sensor with the orange tip at the very right side of the construction.    </p> <p> </p> <p>Looking at the head from the bottom right side, you can see the fan outlet on the left, the hotend with the stock silicone sock and the orange tip of the ABL sensor.    </p> <p>  The following picture shows the whole metal plate where the feeder construction (the marked tips of the three screws on the right side) and the bracket of the ABL sensor (the two marked screws on the left side) is mounted onto - I took these pictures when the head wasn't mounted to the carrier of the x-axis so you can have a better look at the deatails.   </p> <p></p>"},{"location":"hardware/printhead/#disassembling-the-hotendheater-blockheatbreak_1","title":"Disassembling the Hotend/Heater Block/Heatbreak","text":"<p>If you need to take out the hotend from the printhead to change it, disassemble it or to take out the heatbreak to clean it, check out the following steps in the expandable box below.  </p> Disassembling the Hotend, Heater Block and/or Heatbreak <ul> <li>Before you start to disassemble the hotend, take out the thermistor and the cartridge heater of the heater block first by loosening the two tiny grub screws.   Be careful to not rip any wires!  </li> <li>First you have to disassemble the fan on the right side by taking out the two hexagon socket screws at the top and bottom of the fan frame.  </li> <li>Then you'll see two hexagon socket screws at the side which are holding the hotend - loosen them until you can gently pull out the hotend.   You could've seen the heads of the screws already earlier before disassembling the fan, but you wouldn't have been able to reach them as the following picture shows.  </li> <li>If you want to change the the heatbreak, the nozzle or the heater block now, take out the PTFE tube from the heatbreak first. Then heat up the metal parts by using a heat gun for example and unscrew the heatbreak and/or the nozzle from the heater block. Make sure to neither harm any parts while using the wrench nor yourself by accidentally touching the hot material.  </li> </ul> <p>Warning</p> <ul> <li>When pulling out the hotend, make sure the PTFE tube of the hotend comes out, too!  Inspect it if it isn't clogged - if so, either clean it up carefully by e.g. using a little 2mm drill manually by hand or just get a new one as a replacement. Make sure the filament runs through the tube nice and easy and without any friction.   </li> <li>When pulling out the hotend, be careful to not break any wires or rip them off from the sensor and heater catridge - so better unscrew the tiny hex screws a bit and take out the thermistor and the heating cartridge first as mentioned above. </li> <li>Check the wires and contacts if they aren't harmed and if everything is ok. </li> <li>Never try to unscrew the heatbreak from the heater block while the parts are cold!  Melted filament or some kind of screw lock glue might make it hard or even impossible to unscrew it and you risk to shear off the heatbreak!  </li> </ul> <p>Danger</p> <p>If you can see bare wire shining through the isolation of the wires of either the thermistor or the cartridge heater I'd strongly recommend to replace the component to not risk a shortcut and therefore a broken mainboard (seriously - you don't want to get a blown off mainboard like it happened to me just because of a part which maybe costs a buck or two). </p>"},{"location":"hardware/printhead/#leveling-or-dismounting-the-abl-sensor_1","title":"Leveling or Dismounting the ABL Sensor","text":"<p>If you need to dismount the ABL sensor from the printhead to change it or if you need to level it, check out the following steps in the expandable box below. However, the ABL sensor should be leveled anyway, even if you got the printer brandnew from the manufacturer. After adjusting the height of it, determine your Z offset.  </p> <p>The following picture shows a sensor that should/has to be leveled (don't mind the tiny rest of filament at the tip of the nozzle which touches the paper instead of the nozzle itself though, I chipped it away before leveling everything). Because the position of it is too high for just being adjusted using the hex screw at the top, it needs to be dismounted from the bracket first to replace it further below. After that the finetuning using the screw can be done.  </p> Leveling the ABL Sensor <ul> <li>To adjust the height of the ABL sensor and level it, check out the video from Anycubic \"Leveling Operation for Anycubic Kobra Neo\" how to do so. However, I'll also list the steps in the following. </li> <li>Take the height gauge from Anycubic.  If you don't have the height gauge, take a sheet of paper and the open-end wrench that came with your printer.  If you also don't have that, take something with a flat surface that is 1.95mm thick as this is the thickness of the wrench that came with the printer (2mm will be fine also I guess).</li> <li>Put on the spring steel plate on the heater bed and place the printhead about the center of the bed.</li> </ul> <p>Warning</p> <ul> <li>In the following procedure you're adjusting the height of the sensor by moving the whole bracket with the mounted ABL sensor by turning the little M2 hexagon socket screw at the top. You're only able to move it a few milimeters by doing so though!  If you need to adjust a bigger height, you'd need to disassemble the sensor from the bracket itself first to already change it's position in the bracket - see the expandable box below to see how you can disassemble the sensor from the bracket itself.  </li> <li>Before proceeding the following steps I highly recommend to set the Z offset to zero (0). After proceeding the following steps and the executing the ABL function itself afterwards, then you finally want to set the Z offset if necessary.</li> </ul> <ul> <li>If you're using the height gauge, put it under the printhead and lower the head by turning the z axis rod manually. The nozzle should then touch the lower part of the gauge while the proximity sensor should touch the higher part of it.  If the sensor is too high or too low, adjust the height by turning the screw at the top of the bracket that holds the sensor.</li> <li>If you don't have/use the height gauge, place a sheet of paper under the printhead now. Then lower the head to make the nozzle touch the sheet of paper. You should still be able to move the paper but you should feel a minimum amount of resistance as a sign that the nozzle is touching it.  Then place the wrench under the ABL sensor and ajust the height of it by turning the screw on top so that the sensor touches the surface of the wrench.  </li> <li>After completing the beforementioned steps, take the parts away from the bed, set your Z offset to zero (0) if you didn't do it yet and home all axes. Then execute the ABL process and start a testprint.  </li> <li>If the first layer didn't come out right, adjust the Z offset accordingly.</li> </ul> Dismounting the ABL Sensor <ul> <li>If you want to change the ABL sensor, it's advisable first to take off the whole printhead from the carriage of the x-axis by taking out the four hexagon socket screws at the back that hold the plate. </li> <li>Then loosen the two hexagon socket screws at the backplate which holds the plastic bracket in place (where the ABL sensor sits in). They are located at the left side of the back plate if you look at it from the back (see pictures above). The following picture shows the screws from a side view angle to give you a better impression about the location. At the bottom you see one of the little plastic clips - there are two of them on each side.  </li> <li>The bracket itself is designed as a sledge which can be adjusted by turning the M2 hexagon socket screw at the very top of this construction as you can see at the following picture.  </li> <li>Be careful when you want to take out the sensor from the plastic bracket and therefore have to release the tiny plastic clips which close the bracket - don't break them!  </li> <li>The following picture shows once again the two plastic clips on one side - they're on both sides, but it's sufficient to unclip them at one side as the other side will come loose as well then. Just be careful when you unclip one side and move the top of the bracket as it's still clipped in at the other side, so don't be rough here.  Now you can replace the sensor or readjust the position in the bracket. Be aware that there is something like a tiny thread on the little plastic lip located towards the lower end of this lid of the bracket (see red mark on the picture to the right) - make sure this thread fits into the thread of the sensor. If everything sits just right you don't need much pressure to close the lid, so be aware and careful here to not break anything.  </li> <li>After reassembling the sensor, make sure to level it (see expandable box above).</li> </ul>"},{"location":"hardware/printhead/#disassembling-the-feeder-system","title":"Disassembling the Feeder System","text":"<p>If you need to disassemble the feeder system, check out the following steps in the expandable box below.  </p> Disassembling the Feeder System <ul> <li>I didn't disassemble the feeder system yet, so I can't really provide any specific steps or further pictures of the disassembling the feeder system itself. However, if you need to gain access to it, it migth come in handy to disassemble the metal backplate first, which is secured by three hexagon socket screws only. </li> <li>In case you dropped something tiny like a screw or so in the wholes at the top of the feeder, it's probably sufficient to disassemble the system from the metal backplate by taking out the three hexagon socket screws and shake the whole thing around a bit. There are enough holes and openings at the back where you also could try to reach the lost thing using a pair of tweezers. If that doesn't work, proceed with the next step.</li> <li>There is a metal part with cooling fins underneath the 'big' fan at the right side.   This metal part is secured by three screws as you can see at the following picture.   If you unscrew those three hexagon socket screws and take that metal part off, you can get a closer look at the gears of the feeder system (you don't necessarily have to remove the fan to do so). Now you should be able to remove your lost part with some tweezers or get a closer look at the gears if anything is damaged. </li> <li>From what I've seen looking at the printhead while the plastic cover is taken off, you probably would have to disassemble the motor from the system if you want to go even further from here, but I can't really say anything about that right now.</li> </ul>"},{"location":"hardware/printhead/#reassembling_1","title":"Reassembling","text":"<p>For reassembling, just proceed the steps you took to disassemble the part in reverse. However, you might also want to have a look at the general steps I mentioned in the expandable box below.  </p> <p>Warning</p> <ul> <li>If you dismounted the hotend and/or the ABL sensor, make sure to level the ABL sensor again and control your Z offset!</li> <li>If you replaced the hotend/heater block and/or changed the thermistor and/or the cartridge heater, execute a PID tuning!</li> </ul> Reassembling <p>For reassembling, just put everything back together by reverting the beforementioned steps. Make sure you're using the right screws and don't forget any of them. Don't overtighten the screws - as my father (R.I.P.) used to say: \"After tight comes loose!\" (roughly translated). </p> <ol> <li>Warm up the parts using e.g. a heat gun and screw the heatbreak into the heater block until it sits tight.  </li> <li>Put back the cleaned or renewed PTFE tube.  </li> <li>Put the thermistor and the heater cartridge back in place and secure them by carefully tighten the tiny hex screw - don't overtighten them as you could harm the thermistor and the heater cartridge! </li> <li>Then push the heatbreak back into the specific hole - make sure you push it deep enough (I personally push it as far into it as it goes).  </li> <li>Turn the hotend so that the wires which are coming from the heater block are hanging freely and aren't bent too much.  </li> <li>Then tighten up the screws, so that the hotend doesn't turn or wiggle anymore (but don't overtighten the screws though).  </li> <li>Reassemble the fan and the plastic cover.   </li> </ol>"},{"location":"hardware/printhead/#mods","title":"Mods","text":"<p>In the following I'll list some mods I found which belong to the part \"printhead\" somehow. I won't put them in a special order, so you'd have to got through the list I guess. </p>"},{"location":"hardware/printhead/#go_5","title":"Go","text":"<ul> <li>Reddit member xpeng121 posted his modification for the Kobra Go to a direct drive extruder: Kobra Go direct drive mod. Yes it's Neo now... </li> <li>I've read about people upgraded to a full metal hotend using a hotend which is compatible with an Ender 3/V2, so maybe do a little research on that.  </li> <li>MW-Mechanical created an Upgraded fan duct (exposed print head setup) for Anycubic Kobra Go which is supposed to achieve better part cooling.</li> </ul>"},{"location":"hardware/printhead/#neo_5","title":"Neo","text":"<ul> <li>3dpTeach upgraded the hotend of this Kobra to a full metal hotend. Due to the fact that the hotend of the Kobra and the Kobra Neo are identical, you probably want to have a look at his solution: Upgraded All Metal Hot-End for Anycubic Kobra.  </li> <li>Martin created a replacement for the stock fan duct  of the Neo which is supposed to achieve better part cooling due to air flow from three sides.  </li> <li>Gregg Bennett created an extension for the stock fan duct of the Neo which has to be mounted onto it and leads the airflow closer to the printed object underneath the nozzle.    </li> </ul>"},{"location":"hardware/spare_parts/","title":"Spare Parts","text":""},{"location":"hardware/spare_parts/#spare-parts","title":"Spare Parts","text":"<p>When you need to change certain parts or you need to fix them, check out the Anycubic site first and watch out for the correct printer model if you can find what you're looking for.  </p> <p>However, there are only a few original spare parts available for the Go and the Neo at the time of writing this. But as you maybe read in the belonging sections, there are parts from other Kobra models which are just the same (e.g. the hotend from the Kobra and the Kobra Neo) or even parts from third party manufacturers which fit just perfectly (e.g. regular V5 heater blocks, nozzles). So you probably have to look around and search the web a bit if any other company offers the desired parts.  </p> <p>As an example: I had to get myself a new thermistor and cartridge heater for the extruder. As the original ones with the 150cm long wires aren't available as 'official' spare parts and I neither wanted to buy a complete new printhead nor buy a new hotend (from the Kobra) and solder the needed parts, I finally found a seller on Amazon who offered these parts with a long wire and the specific plug for the mainboard. So it's always good to look around a bit instead of just relying on the 'official' sources..  </p> <p>If you're looking for parts like end stop switches for example, keep in mind that those aren't 'specific' parts most of the time - they're regular electronic components. So just have a look at the spare part you need and do a little research if it really is something 'special' that pretty much only Anycubic or authorized sellers are offering (like the mainboard), or if that's a 'regular' electronic component or other hardware (like a stepper motor or so) which is used in general and therefore could be found easily.  </p> <p>Besides this general note, here's one specifically for the european readers: If you're located in Europe, I personally can recommend 3D Jake (I'm not affiliated) as I'm very pleased with them. This company is located in Austria and offers a broad spectrum of original spare parts (even some parts you can't get at Anycubic's shop - weird but true), third party spare parts, filament, tools and other useful accessories for a fair price - plus: they ship pretty fast.  </p>"}]}